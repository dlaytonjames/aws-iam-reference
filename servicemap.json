{
  "AWS AppSync": {
    "ARNFormat": "arn:aws:appsync:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateApiKey",
      "CreateDataSource",
      "CreateGraphqlApi",
      "CreateResolver",
      "CreateType",
      "DeleteApiKey",
      "DeleteDataSource",
      "DeleteGraphqlApi",
      "DeleteResolver",
      "DeleteType",
      "GetDataSource",
      "GetGraphqlApi",
      "GetIntrospectionSchema",
      "GetResolver",
      "GetSchemaCreationStatus",
      "GetType",
      "GraphQL",
      "ListApiKeys",
      "ListDataSources",
      "ListGraphqlApis",
      "ListResolvers",
      "ListTypes",
      "StartSchemaCreation",
      "UpdateApiKey",
      "UpdateDataSource",
      "UpdateGraphqlApi",
      "UpdateResolver",
      "UpdateType"
    ],
    "HasResource": "!0",
    "StringPrefix": "appsync"
  },
  "AWS Artifact": {
    "ARNFormat": "arn:aws:artifact::<resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptAgreement",
      "DownloadAgreement",
      "Get",
      "TerminateAgreement"
    ],
    "HasResource": "!0",
    "StringPrefix": "artifact"
  },
  "AWS Batch": {
    "Actions": [
      "CancelJob",
      "CreateComputeEnvironment",
      "CreateJobQueue",
      "DeleteComputeEnvironment",
      "DeleteJobQueue",
      "DeregisterJobDefinition",
      "DescribeComputeEnvironments",
      "DescribeJobDefinitions",
      "DescribeJobQueues",
      "DescribeJobs",
      "ListJobs",
      "RegisterJobDefinition",
      "SubmitJob",
      "TerminateJob",
      "UpdateComputeEnvironment",
      "UpdateJobQueue"
    ],
    "HasResource": "!1",
    "StringPrefix": "batch"
  },
  "AWS Billing": {
    "Actions": [
      "ModifyAccount",
      "ModifyBilling",
      "ModifyPaymentMethods",
      "ViewAccount",
      "ViewBilling",
      "ViewPaymentMethods",
      "ViewUsage"
    ],
    "HasResource": "!1",
    "StringPrefix": "aws-portal"
  },
  "AWS Budget Service": {
    "ARNFormat": "arn:aws:budgets::<account_ID>:budget/<budgetname>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "ModifyBudget",
      "ViewBudget"
    ],
    "HasResource": "!0",
    "StringPrefix": "budgets"
  },
  "AWS Certificate Manager": {
    "ARNFormat": "arn:aws:acm:<region>:<account_ID>:<arn_type>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTagsToCertificate",
      "DeleteCertificate",
      "DescribeCertificate",
      "GetCertificate",
      "ImportCertificate",
      "ListCertificates",
      "ListTagsForCertificate",
      "RemoveTagsFromCertificate",
      "RequestCertificate",
      "ResendValidationEmail"
    ],
    "HasResource": "!0",
    "StringPrefix": "acm"
  },
  "AWS Cloud9": {
    "ARNFormat": "arn:aws:cloud9:<region>:<account-id>:<resource_type>:<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateEnvironmentEC2",
      "CreateEnvironmentMembership",
      "CreateEnvironmentSSH",
      "DeleteEnvironment",
      "DeleteEnvironmentMembership",
      "DescribeEnvironmentMemberships",
      "DescribeEnvironmentStatus",
      "DescribeEnvironments",
      "GetUserPublicKey",
      "ListEnvironments",
      "UpdateEnvironment",
      "UpdateEnvironmentMembership",
      "ValidateEnvironmentName"
    ],
    "HasResource": "!0",
    "StringPrefix": "cloud9",
    "conditionKeys": [
      "cloud9:EnvironmentId",
      "cloud9:EnvironmentName",
      "cloud9:InstanceType",
      "cloud9:Permissions",
      "cloud9:SubnetId",
      "cloud9:UserArn"
    ]
  },
  "AWS CloudFormation": {
    "ARNFormat": "arn:aws:cloudformation:<region>:<account>:<resourceType>/<name>/<id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CancelUpdateStack",
      "ContinueUpdateRollback",
      "CreateChangeSet",
      "CreateStack",
      "CreateUploadBucket",
      "DeleteChangeSet",
      "DeleteStack",
      "DescribeAccountLimits",
      "DescribeChangeSet",
      "DescribeStackEvents",
      "DescribeStackResource",
      "DescribeStackResources",
      "DescribeStacks",
      "EstimateTemplateCost",
      "ExecuteChangeSet",
      "GetStackPolicy",
      "GetTemplate",
      "GetTemplateSummary",
      "ListChangeSets",
      "ListExports",
      "ListImports",
      "ListStackResources",
      "ListStacks",
      "PreviewStackUpdate",
      "SetStackPolicy",
      "SignalResource",
      "UpdateStack",
      "UpdateTerminationProtection",
      "ValidateTemplate"
    ],
    "HasResource": "!0",
    "StringPrefix": "cloudformation",
    "conditionKeys": [
      "cloudformation:ChangeSetName",
      "cloudformation:ResourceTypes",
      "cloudformation:RoleArn",
      "cloudformation:StackPolicyUrl",
      "cloudformation:TemplateUrl"
    ]
  },
  "AWS CloudHSM": {
    "Actions": [
      "AddTagsToResource",
      "CreateHapg",
      "CreateHsm",
      "CreateLunaClient",
      "DeleteHapg",
      "DeleteHsm",
      "DeleteLunaClient",
      "DescribeHapg",
      "DescribeHsm",
      "DescribeLunaClient",
      "GetConfig",
      "ListAvailableZones",
      "ListHapgs",
      "ListHsms",
      "ListLunaClients",
      "ListTagsForResource",
      "ModifyHapg",
      "ModifyHsm",
      "ModifyLunaClient",
      "RemoveTagsFromResource"
    ],
    "HasResource": "!1",
    "StringPrefix": "cloudhsm"
  },
  "AWS CloudTrail": {
    "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "CreateTrail",
      "DeleteTrail",
      "DescribeTrails",
      "GetEventSelectors",
      "GetTrailStatus",
      "ListPublicKeys",
      "ListTags",
      "LookupEvents",
      "PutEventSelectors",
      "RemoveTags",
      "StartLogging",
      "StopLogging",
      "UpdateTrail"
    ],
    "HasResource": "!0",
    "StringPrefix": "cloudtrail"
  },
  "AWS Code Signing for Amazon FreeRTOS": {
    "Actions": [
      "DescribeSigningJob",
      "ListSigningJobs",
      "StartSigningJob"
    ],
    "HasResource": "!1",
    "StringPrefix": "signer"
  },
  "AWS CodeBuild": {
    "ARNFormat": "arn:aws:codebuild:<region>:<account_ID>:<resource_type>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchDeleteBuilds",
      "BatchGetBuilds",
      "BatchGetProjects",
      "CreateProject",
      "DeleteProject",
      "ListBuilds",
      "ListBuildsForProject",
      "ListConnectedOAuthAccounts",
      "ListCuratedEnvironmentImages",
      "ListProjects",
      "ListRepositories",
      "PersistOAuthToken",
      "StartBuild",
      "StopBuild",
      "UpdateProject"
    ],
    "HasResource": "!0",
    "StringPrefix": "codebuild"
  },
  "AWS CodeCommit": {
    "ARNFormat": "arn:aws:codecommit:<region>:<account_ID>:<repository_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchGetPullRequests",
      "BatchGetRepositories",
      "CancelUploadArchive",
      "CreateBranch",
      "CreatePullRequest",
      "CreateRepository",
      "DeleteBranch",
      "DeleteCommentContent",
      "DeleteRepository",
      "DescribePullRequestEvents",
      "GetBlob",
      "GetBranch",
      "GetComment",
      "GetCommentsForComparedCommit",
      "GetCommentsForPullRequest",
      "GetCommit",
      "GetCommitHistory",
      "GetCommitsFromMergeBase",
      "GetDifferences",
      "GetMergeConflicts",
      "GetObjectIdentifier",
      "GetPullRequest",
      "GetReferences",
      "GetRepository",
      "GetRepositoryTriggers",
      "GetTree",
      "GetUploadArchiveStatus",
      "GitPull",
      "GitPush",
      "ListBranches",
      "ListPullRequests",
      "ListRepositories",
      "MergePullRequestByFastForward",
      "PostCommentForComparedCommit",
      "PostCommentForPullRequest",
      "PostCommentReply",
      "PutFile",
      "PutRepositoryTriggers",
      "TestRepositoryTriggers",
      "UpdateComment",
      "UpdateDefaultBranch",
      "UpdatePullRequestDescription",
      "UpdatePullRequestStatus",
      "UpdatePullRequestTitle",
      "UpdateRepositoryDescription",
      "UpdateRepositoryName",
      "UploadArchive"
    ],
    "HasResource": "!0",
    "StringPrefix": "codecommit"
  },
  "AWS CodeDeploy": {
    "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTagsToOnPremisesInstances",
      "BatchGetApplicationRevisions",
      "BatchGetApplications",
      "BatchGetDeploymentGroups",
      "BatchGetDeploymentInstances",
      "BatchGetDeployments",
      "BatchGetOnPremisesInstances",
      "ContinueDeployment",
      "CreateApplication",
      "CreateDeployment",
      "CreateDeploymentConfig",
      "CreateDeploymentGroup",
      "DeleteApplication",
      "DeleteDeploymentConfig",
      "DeleteDeploymentGroup",
      "DeregisterOnPremisesInstance",
      "GetApplication",
      "GetApplicationRevision",
      "GetDeployment",
      "GetDeploymentConfig",
      "GetDeploymentGroup",
      "GetDeploymentInstance",
      "GetOnPremisesInstance",
      "ListApplicationRevisions",
      "ListApplications",
      "ListDeploymentConfigs",
      "ListDeploymentGroups",
      "ListDeploymentInstances",
      "ListDeployments",
      "ListOnPremisesInstances",
      "RegisterApplicationRevision",
      "RegisterOnPremisesInstance",
      "RemoveTagsFromOnPremisesInstances",
      "StopDeployment",
      "UpdateApplication",
      "UpdateDeploymentGroup"
    ],
    "HasResource": "!0",
    "StringPrefix": "codedeploy"
  },
  "AWS CodePipeline": {
    "ARNFormat": "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcknowledgeJob",
      "AcknowledgeThirdPartyJob",
      "CreateCustomActionType",
      "CreatePipeline",
      "DeleteCustomActionType",
      "DeletePipeline",
      "DisableStageTransition",
      "EnableStageTransition",
      "GetJobDetails",
      "GetPipeline",
      "GetPipelineExecution",
      "GetPipelineState",
      "GetThirdPartyJobDetails",
      "ListActionTypes",
      "ListPipelineExecutions",
      "ListPipelines",
      "PollForJobs",
      "PollForThirdPartyJobs",
      "PutActionRevision",
      "PutApprovalResult",
      "PutJobFailureResult",
      "PutJobSuccessResult",
      "PutThirdPartyJobFailureResult",
      "PutThirdPartyJobSuccessResult",
      "RetryStageExecution",
      "StartPipelineExecution",
      "UpdatePipeline"
    ],
    "HasResource": "!0",
    "StringPrefix": "codepipeline"
  },
  "AWS CodeStar": {
    "ARNFormat": "arn:aws:codestar:<region>:<account_ID>:<resource_type>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateTeamMember",
      "CreateProject",
      "CreateUserProfile",
      "DeleteExtendedAccess",
      "DeleteProject",
      "DeleteUserProfile",
      "DescribeProject",
      "DescribeUserProfile",
      "DisassociateTeamMember",
      "GetExtendedAccess",
      "ListProjects",
      "ListResources",
      "ListTeamMembers",
      "ListUserProfiles",
      "PutExtendedAccess",
      "UpdateProject",
      "UpdateTeamMember",
      "UpdateUserProfile",
      "VerifyServiceRole"
    ],
    "HasResource": "!0",
    "StringPrefix": "codestar"
  },
  "AWS Config": {
    "Actions": [
      "DeleteConfigRule",
      "DeleteConfigurationRecorder",
      "DeleteDeliveryChannel",
      "DeleteEvaluationResults",
      "DeliverConfigSnapshot",
      "DescribeComplianceByConfigRule",
      "DescribeComplianceByResource",
      "DescribeConfigRuleEvaluationStatus",
      "DescribeConfigRules",
      "DescribeConfigurationRecorderStatus",
      "DescribeConfigurationRecorders",
      "DescribeDeliveryChannelStatus",
      "DescribeDeliveryChannels",
      "GetComplianceDetailsByConfigRule",
      "GetComplianceDetailsByResource",
      "GetComplianceSummaryByConfigRule",
      "GetComplianceSummaryByResourceType",
      "GetResourceConfigHistory",
      "GetResources",
      "GetTagKeys",
      "ListDiscoveredResources",
      "PutConfigRule",
      "PutConfigurationRecorder",
      "PutDeliveryChannel",
      "PutEvaluations",
      "StartConfigRulesEvaluation",
      "StartConfigurationRecorder",
      "StopConfigurationRecorder"
    ],
    "HasResource": "!1",
    "StringPrefix": "config"
  },
  "AWS Cost Explorer Service": {
    "ARNFormat": "arn:aws:ce::<account_ID>:ce",
    "ARNRegex": "REMOVED",
    "Actions": [
      "GetCostAndUsage",
      "GetDimensionValues",
      "GetReservationUtilization",
      "GetTags"
    ],
    "HasResource": "!1",
    "StringPrefix": "ce"
  },
  "AWS Cost and Usage Report": {
    "ARNFormat": "arn:aws:cur:<region>:<account_ID>:definition/<reportname>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DeleteReportDefinition",
      "DescribeReportDefinitions",
      "PutReportDefinition"
    ],
    "HasResource": "!0",
    "StringPrefix": "cur"
  },
  "AWS Database Migration Service": {
    "ARNFormat": "arn:aws:dms:<region>:<account>:<resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTagsToResource",
      "CreateEndpoint",
      "CreateReplicationInstance",
      "CreateReplicationSubnetGroup",
      "CreateReplicationTask",
      "DeleteEndpoint",
      "DeleteEventSubscription",
      "DeleteReplicationInstance",
      "DeleteReplicationSubnetGroup",
      "DeleteReplicationTask",
      "DescribeAccountAttributes",
      "DescribeCertificates",
      "DescribeConnections",
      "DescribeEndpointTypes",
      "DescribeEndpoints",
      "DescribeEventCategories",
      "DescribeEventSubscriptions",
      "DescribeEvents",
      "DescribeOrderableReplicationInstances",
      "DescribeRefreshSchemasStatus",
      "DescribeReplicationInstances",
      "DescribeReplicationSubnetGroups",
      "DescribeReplicationTasks",
      "DescribeSchemas",
      "DescribeTableStatistics",
      "ListTagsForResource",
      "ModifyEndpoint",
      "ModifyEventSubscription",
      "ModifyReplicationInstance",
      "ModifyReplicationSubnetGroup",
      "ModifyReplicationTask",
      "RefreshSchemas",
      "RemoveTagsFromResource",
      "StartReplicationTask",
      "StopReplicationTask",
      "TestConnection"
    ],
    "HasResource": "!1",
    "StringPrefix": "dms"
  },
  "AWS Device Farm": {
    "Actions": [
      "CreateDevicePool",
      "CreateNetworkProfile",
      "CreateProject",
      "CreateRemoteAccessSession",
      "CreateUpload",
      "DeleteDevicePool",
      "DeleteNetworkProfile",
      "DeleteProject",
      "DeleteRemoteAccessSession",
      "DeleteRun",
      "DeleteUpload",
      "GetAccountSettings",
      "GetDevice",
      "GetDevicePool",
      "GetDevicePoolCompatibility",
      "GetJob",
      "GetNetworkProfile",
      "GetOfferingStatus",
      "GetProject",
      "GetRemoteAccessSession",
      "GetRun",
      "GetSuite",
      "GetTest",
      "GetUpload",
      "InstallToRemoteAccessSession",
      "ListArtifacts",
      "ListDevicePools",
      "ListDevices",
      "ListJobs",
      "ListNetworkProfiles",
      "ListOfferingTransactions",
      "ListOfferings",
      "ListProjects",
      "ListRemoteAccessSessions",
      "ListRuns",
      "ListSamples",
      "ListSuites",
      "ListTests",
      "ListUniqueProblems",
      "ListUploads",
      "PurchaseOffering",
      "RenewOffering",
      "ScheduleRun",
      "StopRemoteAccessSession",
      "StopRun",
      "UpdateDevicePool",
      "UpdateNetworkProfile",
      "UpdateProject"
    ],
    "HasResource": "!1",
    "StringPrefix": "devicefarm"
  },
  "AWS Direct Connect": {
    "Actions": [
      "AllocateConnectionOnInterconnect",
      "AllocatePrivateVirtualInterface",
      "AllocatePublicVirtualInterface",
      "ConfirmConnection",
      "ConfirmPrivateVirtualInterface",
      "ConfirmPublicVirtualInterface",
      "CreateConnection",
      "CreateInterconnect",
      "CreatePrivateVirtualInterface",
      "CreatePublicVirtualInterface",
      "DeleteConnection",
      "DeleteInterconnect",
      "DeleteVirtualInterface",
      "DescribeConnectionLoa",
      "DescribeConnections",
      "DescribeConnectionsOnInterconnect",
      "DescribeInterconnectLoa",
      "DescribeInterconnects",
      "DescribeLocations",
      "DescribeVirtualGateways",
      "DescribeVirtualInterfaces"
    ],
    "HasResource": "!1",
    "StringPrefix": "directconnect"
  },
  "AWS Directory Service": {
    "Actions": [
      "AddIpRoutes",
      "AddTagsToResource",
      "AuthorizeApplication",
      "CancelSchemaExtension",
      "ConnectDirectory",
      "CreateAlias",
      "CreateComputer",
      "CreateConditionalForwarder",
      "CreateDirectory",
      "CreateMicrosoftAD",
      "CreateSnapshot",
      "CreateTrust",
      "DeleteConditionalForwarder",
      "DeleteDirectory",
      "DeleteSnapshot",
      "DeleteTrust",
      "DeregisterEventTopic",
      "DescribeConditionalForwarders",
      "DescribeDirectories",
      "DescribeEventTopics",
      "DescribeSnapshots",
      "DescribeTrusts",
      "DisableRadius",
      "DisableSso",
      "EnableRadius",
      "EnableSso",
      "GetDirectoryLimits",
      "GetSnapshotLimits",
      "ListAuthorizedApplications",
      "ListIpRoutes",
      "ListSchemaExtensions",
      "ListTagsForResource",
      "RegisterEventTopic",
      "RemoveIpRoutes",
      "RemoveTagsFromResource",
      "RestoreFromSnapshot",
      "StartSchemaExtension",
      "UnauthorizeApplication",
      "UpdateConditionalForwarder",
      "UpdateRadius",
      "VerifyTrust"
    ],
    "HasResource": "!1",
    "StringPrefix": "ds"
  },
  "AWS Elastic Beanstalk": {
    "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AbortEnvironmentUpdate",
      "ApplyEnvironmentManagedAction",
      "CheckDNSAvailability",
      "ComposeEnvironments",
      "CreateApplication",
      "CreateApplicationVersion",
      "CreateConfigurationTemplate",
      "CreateEnvironment",
      "CreatePlatformVersion",
      "CreateStorageLocation",
      "DeleteApplication",
      "DeleteApplicationVersion",
      "DeleteConfigurationTemplate",
      "DeleteEnvironmentConfiguration",
      "DeletePlatformVersion",
      "DescribeApplicationVersions",
      "DescribeApplications",
      "DescribeConfigurationOptions",
      "DescribeConfigurationSettings",
      "DescribeEnvironmentHealth",
      "DescribeEnvironmentManagedActionHistory",
      "DescribeEnvironmentManagedActions",
      "DescribeEnvironmentResources",
      "DescribeEnvironments",
      "DescribeEvents",
      "DescribeInstancesHealth",
      "DescribePlatformVersion",
      "ListAvailableSolutionStacks",
      "ListPlatformVersions",
      "RebuildEnvironment",
      "RequestEnvironmentInfo",
      "RestartAppServer",
      "RetrieveEnvironmentInfo",
      "SwapEnvironmentCNAMEs",
      "TerminateEnvironment",
      "UpdateApplication",
      "UpdateApplicationResourceLifecycle",
      "UpdateApplicationVersion",
      "UpdateConfigurationTemplate",
      "UpdateEnvironment",
      "ValidateConfigurationSettings"
    ],
    "HasResource": "!0",
    "StringPrefix": "elasticbeanstalk",
    "conditionKeys": [
      "elasticbeanstalk:FromApplication",
      "elasticbeanstalk:FromApplicationVersion",
      "elasticbeanstalk:FromConfigurationTemplate",
      "elasticbeanstalk:FromEnvironment",
      "elasticbeanstalk:FromSolutionStack",
      "elasticbeanstalk:InApplication"
    ]
  },
  "AWS Elemental MediaConvert": {
    "Actions": [
      "CancelJob",
      "CreateJob",
      "CreateJobTemplate",
      "CreatePreset",
      "CreateQueue",
      "DeleteJobTemplate",
      "DeletePreset",
      "DeleteQueue",
      "DescribeEndpoint",
      "GetJob",
      "GetJobTemplate",
      "GetPreset",
      "GetQueue",
      "ListJobTemplates",
      "ListJobs",
      "ListPresets",
      "ListQueues",
      "UpdateJobTemplate",
      "UpdatePreset",
      "UpdateQueue"
    ],
    "HasResource": "!1",
    "StringPrefix": "mediaconvert"
  },
  "AWS Elemental MediaLive": {
    "Actions": [
      "CreateChannel",
      "CreateInput",
      "CreateInputSecurityGroup",
      "DeleteChannel",
      "DeleteInput",
      "DeleteInputSecurityGroup",
      "DescribeChannel",
      "DescribeInput",
      "DescribeInputSecurityGroup",
      "ListChannels",
      "ListInputSecurityGroups",
      "ListInputs",
      "StartChannel",
      "StopChannel"
    ],
    "HasResource": "!1",
    "StringPrefix": "medialive"
  },
  "AWS Elemental MediaPackage": {
    "ARNFormat": "arn:aws:mediapackage:<region>:<account_ID>:<resource>/<identifier>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateChannel",
      "CreateOriginEndpoint",
      "DeleteChannel",
      "DeleteOriginEndpoint",
      "DescribeChannel",
      "DescribeOriginEndpoint",
      "ListChannels",
      "ListOriginEndpoints",
      "UpdateChannel",
      "UpdateOriginEndpoint"
    ],
    "HasResource": "!0",
    "StringPrefix": "mediapackage"
  },
  "AWS Elemental MediaStore": {
    "ARNFormat": "arn:aws:mediastore:<Region>:<Account>:<Resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateContainer",
      "DeleteContainer",
      "DeleteContainerPolicy",
      "DeleteObject",
      "DescribeContainer",
      "DescribeObject",
      "GetContainerPolicy",
      "GetObject",
      "ListContainers",
      "ListItems",
      "PutContainerPolicy",
      "PutObject"
    ],
    "HasResource": "!0",
    "StringPrefix": "mediastore"
  },
  "AWS Glue": {
    "Actions": [
      "BatchCreatePartition",
      "BatchDeleteConnection",
      "BatchDeletePartition",
      "BatchDeleteTable",
      "BatchGetPartition",
      "CreateClassifier",
      "CreateConnection",
      "CreateCrawler",
      "CreateDatabase",
      "CreateDevEndpoint",
      "CreateJob",
      "CreatePartition",
      "CreateScript",
      "CreateTable",
      "CreateTrigger",
      "CreateUserDefinedFunction",
      "DeleteClassifier",
      "DeleteConnection",
      "DeleteCrawler",
      "DeleteDatabase",
      "DeleteDevEndpoint",
      "DeleteJob",
      "DeletePartition",
      "DeleteTable",
      "DeleteTrigger",
      "DeleteUserDefinedFunction",
      "GetCatalogImportStatus",
      "GetClassifier",
      "GetClassifiers",
      "GetConnection",
      "GetConnections",
      "GetCrawler",
      "GetCrawlerMetrics",
      "GetCrawlers",
      "GetDatabase",
      "GetDatabases",
      "GetDataflowGraph",
      "GetDevEndpoint",
      "GetDevEndpoints",
      "GetJob",
      "GetJobRun",
      "GetJobRuns",
      "GetJobs",
      "GetMapping",
      "GetPartition",
      "GetPartitions",
      "GetPlan",
      "GetTable",
      "GetTableVersions",
      "GetTables",
      "GetTrigger",
      "GetTriggers",
      "GetUserDefinedFunction",
      "GetUserDefinedFunctions",
      "ImportCatalogToGlue",
      "ResetJobBookmark",
      "StartCrawler",
      "StartCrawlerSchedule",
      "StartJobRun",
      "StartTrigger",
      "StopCrawler",
      "StopCrawlerSchedule",
      "StopTrigger",
      "UpdateClassifier",
      "UpdateConnection",
      "UpdateCrawler",
      "UpdateDatabase",
      "UpdateDevEndpoint",
      "UpdateJob",
      "UpdatePartition",
      "UpdateTable",
      "UpdateTrigger",
      "UpdateUserDefinedFunction"
    ],
    "HasResource": "!1",
    "StringPrefix": "glue"
  },
  "AWS Greengrass": {
    "ARNFormat": "arn:aws:greengrass:<region>:<account_ID>:/greengrass/<type>/<Id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateRoleToGroup",
      "AssociateServiceRoleToAccount",
      "CreateCoreDefinition",
      "CreateCoreDefinitionVersion",
      "CreateDeployment",
      "CreateDeviceDefinition",
      "CreateDeviceDefinitionVersion",
      "CreateFunctionDefinition",
      "CreateFunctionDefinitionVersion",
      "CreateGroup",
      "CreateGroupCertificateAuthority",
      "CreateGroupVersion",
      "CreateLoggerDefinition",
      "CreateLoggerDefinitionVersion",
      "CreateResourceDefinition",
      "CreateResourceDefinitionVersion",
      "CreateSoftwareUpdateJob",
      "CreateSubscriptionDefinition",
      "CreateSubscriptionDefinitionVersion",
      "DeleteCoreDefinition",
      "DeleteDeviceDefinition",
      "DeleteFunctionDefinition",
      "DeleteGroup",
      "DeleteLoggerDefinition",
      "DeleteResourceDefinition",
      "DeleteSubscriptionDefinition",
      "DisassociateRoleFromGroup",
      "DisassociateServiceRoleFromAccount",
      "GetAssociatedRole",
      "GetConnectivityInfo",
      "GetCoreDefinition",
      "GetCoreDefinitionVersion",
      "GetDeploymentStatus",
      "GetDeviceDefinition",
      "GetDeviceDefinitionVersion",
      "GetFunctionDefinition",
      "GetFunctionDefinitionVersion",
      "GetGroup",
      "GetGroupCertificateAuthority",
      "GetGroupCertificateConfiguration",
      "GetGroupVersion",
      "GetLoggerDefinition",
      "GetLoggerDefinitionVersion",
      "GetResourceDefinition",
      "GetResourceDefinitionVersion",
      "GetServiceRoleForAccount",
      "GetSubscriptionDefinition",
      "GetSubscriptionDefinitionVersion",
      "ListCoreDefinitionVersions",
      "ListCoreDefinitions",
      "ListDeployments",
      "ListDeviceDefinitionVersions",
      "ListDeviceDefinitions",
      "ListFunctionDefinitionVersions",
      "ListFunctionDefinitions",
      "ListGroupCertificateAuthorities",
      "ListGroupVersions",
      "ListGroups",
      "ListLoggerDefinitionVersions",
      "ListLoggerDefinitions",
      "ListResourceDefinitionVersions",
      "ListResourceDefinitions",
      "ListSubscriptionDefinitionVersions",
      "ListSubscriptionDefinitions",
      "ResetDeployments",
      "UpdateConnectivityInfo",
      "UpdateCoreDefinition",
      "UpdateDeviceDefinition",
      "UpdateFunctionDefinition",
      "UpdateGroup",
      "UpdateGroupCertificateConfiguration",
      "UpdateLoggerDefinition",
      "UpdateResourceDefinition",
      "UpdateSubscriptionDefinition"
    ],
    "HasResource": "!0",
    "StringPrefix": "greengrass"
  },
  "AWS Health APIs and Notifications": {
    "ARNFormat": "arn:aws:health::<namespace>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DescribeAffectedEntities",
      "DescribeEntityAggregates",
      "DescribeEventAggregates",
      "DescribeEventDetails",
      "DescribeEventTypes",
      "DescribeEvents"
    ],
    "HasResource": "!0",
    "StringPrefix": "health"
  },
  "AWS Import Export Disk Service": {
    "Actions": [
      "CancelJob",
      "CreateJob",
      "GetShippingLabel",
      "GetStatus",
      "ListJobs",
      "UpdateJob"
    ],
    "HasResource": "!1",
    "StringPrefix": "importexport"
  },
  "AWS IoT": {
    "ARNFormat": "arn:aws:iot:<region>:<account_ID>:<type>/<name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptCertificateTransfer",
      "AssociateTargetsWithJob",
      "AttachPolicy",
      "AttachPrincipalPolicy",
      "AttachThingPrincipal",
      "CancelCertificateTransfer",
      "CancelJob",
      "ClearDefaultAuthorizer",
      "Connect",
      "CreateAuthorizer",
      "CreateCertificateFromCsr",
      "CreateJob",
      "CreateKeysAndCertificate",
      "CreateOTAUpdateJob",
      "CreatePolicy",
      "CreatePolicyVersion",
      "CreateRoleAlias",
      "CreateStream",
      "CreateThing",
      "CreateThingType",
      "CreateTopicRule",
      "DeleteAuthorizer",
      "DeleteCACertificate",
      "DeleteCertificate",
      "DeleteOTAUpdateJob",
      "DeletePolicy",
      "DeletePolicyVersion",
      "DeleteRegistrationCode",
      "DeleteRoleAlias",
      "DeleteStream",
      "DeleteThing",
      "DeleteThingShadow",
      "DeleteThingType",
      "DeleteTopicRule",
      "DeprecateThingType",
      "DescribeAuthorizer",
      "DescribeCACertificate",
      "DescribeCertificate",
      "DescribeDefaultAuthorizer",
      "DescribeEndpoint",
      "DescribeIndex",
      "DescribeJob",
      "DescribeJobExecution",
      "DescribeRoleAlias",
      "DescribeStream",
      "DescribeThing",
      "DescribeThingType",
      "DetachPolicy",
      "DetachPrincipalPolicy",
      "DetachThingPrincipal",
      "DisableTopicRule",
      "EnableTopicRule",
      "GetEffectivePolicies",
      "GetIndexingConfiguration",
      "GetJobDocument",
      "GetLoggingOptions",
      "GetOTAUpdateJob",
      "GetPolicy",
      "GetPolicyVersion",
      "GetRegistrationCode",
      "GetThingShadow",
      "GetTopicRule",
      "ListAttachedPolicies",
      "ListAuthorizers",
      "ListCACertificates",
      "ListCertificates",
      "ListCertificatesByCA",
      "ListIndices",
      "ListJobExecutionsForJob",
      "ListJobExecutionsForThing",
      "ListJobs",
      "ListOTAUpdateJobs",
      "ListOutgoingCertificates",
      "ListPolicies",
      "ListPolicyPrincipals",
      "ListPolicyVersions",
      "ListPrincipalPolicies",
      "ListPrincipalThings",
      "ListRoleAliases",
      "ListStreams",
      "ListTargetsForPolicy",
      "ListThingPrincipals",
      "ListThingTypes",
      "ListThings",
      "ListTopicRules",
      "Publish",
      "Receive",
      "RegisterCACertificate",
      "RegisterCertificate",
      "RejectCertificateTransfer",
      "ReplaceTopicRule",
      "SearchIndex",
      "SetDefaultAuthorizer",
      "SetDefaultPolicyVersion",
      "SetLoggingOptions",
      "Subscribe",
      "TestAuthorization",
      "TestInvokeAuthorizer",
      "TransferCertificate",
      "UpdateAuthorizer",
      "UpdateCACertificate",
      "UpdateCertificate",
      "UpdateIndexingConfiguration",
      "UpdateRoleAlias",
      "UpdateStream",
      "UpdateThing",
      "UpdateThingShadow"
    ],
    "HasResource": "!0",
    "StringPrefix": "iot"
  },
  "AWS IoT Analytics": {
    "ARNFormat": "arn:aws:iotanalytics:<region>:<account_ID>:<type>/<name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateChannel",
      "CreateDataset",
      "CreateDatasetContent",
      "CreateDatastore",
      "CreatePipeline",
      "DeleteChannel",
      "DeleteDataset",
      "DeleteDatasetContent",
      "DeleteDatastore",
      "DeletePipeline",
      "DescribeChannel",
      "DescribeDataset",
      "DescribeDatastore",
      "DescribePipeline",
      "GetDatasetContent",
      "ListChannels",
      "ListDatasets",
      "ListDatastores",
      "ListPipelines",
      "UpdateDataset",
      "UpdatePipeline"
    ],
    "HasResource": "!1",
    "StringPrefix": "iotanalytics"
  },
  "AWS Key Management Service": {
    "ARNFormat": "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CancelKeyDeletion",
      "CreateAlias",
      "CreateGrant",
      "CreateKey",
      "Decrypt",
      "DeleteAlias",
      "DeleteImportedKeyMaterial",
      "DescribeKey",
      "DisableKey",
      "DisableKeyRotation",
      "EnableKey",
      "EnableKeyRotation",
      "Encrypt",
      "GenerateDataKey",
      "GenerateDataKeyWithoutPlaintext",
      "GenerateRandom",
      "GetKeyPolicy",
      "GetKeyRotationStatus",
      "GetParametersForImport",
      "ImportKeyMaterial",
      "ListAliases",
      "ListGrants",
      "ListKeyPolicies",
      "ListKeys",
      "ListResourceTags",
      "ListRetirableGrants",
      "PutKeyPolicy",
      "ReEncryptFrom",
      "ReEncryptTo",
      "RetireGrant",
      "RevokeGrant",
      "ScheduleKeyDeletion",
      "TagResource",
      "UntagResource",
      "UpdateAlias",
      "UpdateKeyDescription"
    ],
    "HasResource": "!0",
    "StringPrefix": "kms"
  },
  "AWS Lambda": {
    "ARNFormat": "arn:aws:lambda:<region>:<account>:function:<functionName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddPermission",
      "CreateAlias",
      "CreateEventSourceMapping",
      "CreateFunction",
      "DeleteAlias",
      "DeleteEventSourceMapping",
      "DeleteFunction",
      "DeleteFunctionConcurrency",
      "EnableReplication",
      "GetAccountSettings",
      "GetAlias",
      "GetEventSourceMapping",
      "GetFunction",
      "GetFunctionConfiguration",
      "GetPolicy",
      "InvokeAsync",
      "InvokeFunction",
      "ListAliases",
      "ListEventSourceMappings",
      "ListFunctions",
      "ListTags",
      "ListVersionsByFunction",
      "PublishVersion",
      "PutFunctionConcurrency",
      "RemovePermission",
      "TagResource",
      "UntagResource",
      "UpdateAlias",
      "UpdateEventSourceMapping",
      "UpdateFunctionCode",
      "UpdateFunctionConfiguration"
    ],
    "HasResource": "!0",
    "StringPrefix": "lambda"
  },
  "AWS Marketplace": {
    "Actions": [
      "Subscribe",
      "Unsubscribe",
      "ViewSubscriptions"
    ],
    "HasResource": "!1",
    "StringPrefix": "aws-marketplace"
  },
  "AWS Marketplace Management Portal": {
    "Actions": [
      "uploadFiles",
      "viewMarketing",
      "viewReports",
      "viewSupport"
    ],
    "HasResource": "!1",
    "StringPrefix": "aws-marketplace-management"
  },
  "AWS Marketplace Metering Service": {
    "Actions": [
      "BatchMeterUsage",
      "MeterUsage",
      "ResolveCustomer"
    ],
    "HasResource": "!1",
    "StringPrefix": "aws-marketplace"
  },
  "AWS Migration Hub": {
    "ARNFormat": "arn:aws:mgh:<region>:<namespace>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateCreatedArtifact",
      "AssociateDiscoveredResource",
      "CreateProgressUpdateStream",
      "DeleteProgressUpdateStream",
      "DescribeApplicationState",
      "DescribeMigrationTask",
      "DisassociateCreatedArtifact",
      "DisassociateDiscoveredResource",
      "ImportMigrationTask",
      "ListCreatedArtifacts",
      "ListDiscoveredResources",
      "ListMigrationTasks",
      "ListProgressUpdateStreams",
      "NotifyApplicationState",
      "NotifyMigrationTaskState",
      "PutResourceAttributes"
    ],
    "HasResource": "!0",
    "StringPrefix": "mgh"
  },
  "AWS Mobile Hub": {
    "ARNFormat": "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateProject",
      "CreateServiceRole",
      "DeleteProject",
      "DeployToStage",
      "DescribeBundle",
      "ExportBundle",
      "ExportProject",
      "GenerateProjectParameters",
      "GetProject",
      "GetProjectSnapshot",
      "ImportProject",
      "ListAvailableConnectors",
      "ListAvailableFeatures",
      "ListAvailableRegions",
      "ListBundles",
      "ListProjects",
      "SynchronizeProject",
      "UpdateProject",
      "VerifyServiceRole"
    ],
    "HasResource": "!0",
    "StringPrefix": "mobilehub"
  },
  "AWS OpsWorks": {
    "Actions": [
      "AssignInstance",
      "AssignVolume",
      "AssociateElasticIp",
      "AttachElasticLoadBalancer",
      "CloneStack",
      "CreateApp",
      "CreateDeployment",
      "CreateInstance",
      "CreateLayer",
      "CreateStack",
      "CreateUserProfile",
      "DeleteApp",
      "DeleteInstance",
      "DeleteLayer",
      "DeleteStack",
      "DeleteUserProfile",
      "DeregisterEcsCluster",
      "DeregisterElasticIp",
      "DeregisterInstance",
      "DeregisterRdsDbInstance",
      "DeregisterVolume",
      "DescribeAgentVersions",
      "DescribeApps",
      "DescribeCommands",
      "DescribeDeployments",
      "DescribeEcsClusters",
      "DescribeElasticIps",
      "DescribeElasticLoadBalancers",
      "DescribeInstances",
      "DescribeLayers",
      "DescribeLoadBasedAutoScaling",
      "DescribeMyUserProfile",
      "DescribePermissions",
      "DescribeRaidArrays",
      "DescribeRdsDbInstances",
      "DescribeServiceErrors",
      "DescribeStackProvisioningParameters",
      "DescribeStackSummary",
      "DescribeStacks",
      "DescribeTimeBasedAutoScaling",
      "DescribeUserProfiles",
      "DescribeVolumes",
      "DetachElasticLoadBalancer",
      "DisassociateElasticIp",
      "GetHostnameSuggestion",
      "GrantAccess",
      "ListTags",
      "RebootInstance",
      "RegisterEcsCluster",
      "RegisterElasticIp",
      "RegisterInstance",
      "RegisterRdsDbInstance",
      "RegisterVolume",
      "SetLoadBasedAutoScaling",
      "SetPermission",
      "SetTimeBasedAutoScaling",
      "StartInstance",
      "StartStack",
      "StopInstance",
      "StopStack",
      "TagResource",
      "UnassignInstance",
      "UnassignVolume",
      "UntagResource",
      "UpdateApp",
      "UpdateElasticIp",
      "UpdateInstance",
      "UpdateLayer",
      "UpdateMyUserProfile",
      "UpdateRdsDbInstance",
      "UpdateStack",
      "UpdateUserProfile",
      "UpdateVolume"
    ],
    "HasResource": "!1",
    "StringPrefix": "opsworks"
  },
  "AWS OpsWorks Configuration Management": {
    "ARNFormat": "arn:aws:opsworks-cm:<region>:<account>:<resourceType>/<id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateNode",
      "CreateBackup",
      "CreateServer",
      "DeleteBackup",
      "DeleteServer",
      "DescribeAccountAttributes",
      "DescribeBackups",
      "DescribeEvents",
      "DescribeNodeAssociationStatus",
      "DescribeServers",
      "DisassociateNode",
      "RestoreServer",
      "StartMaintenance",
      "UpdateServer",
      "UpdateServerEngineAttributes"
    ],
    "HasResource": "!1",
    "StringPrefix": "opsworks-cm"
  },
  "AWS Organizations": {
    "ARNFormat": "arn:aws:organizations::<masterAccountId>:<resource>/o-<organizationId>(/<resourceType>/<resourceId>)?",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptHandshake",
      "AttachPolicy",
      "CancelHandshake",
      "CreateAccount",
      "CreateOrganization",
      "CreateOrganizationalUnit",
      "CreatePolicy",
      "DeclineHandshake",
      "DeleteOrganization",
      "DeleteOrganizationalUnit",
      "DeletePolicy",
      "DescribeAccount",
      "DescribeCreateAccountStatus",
      "DescribeHandshake",
      "DescribeOrganization",
      "DescribeOrganizationalUnit",
      "DescribePolicy",
      "DetachPolicy",
      "DisablePolicyType",
      "EnableAllFeatures",
      "EnablePolicyType",
      "InviteAccountToOrganization",
      "LeaveOrganization",
      "ListAccounts",
      "ListAccountsForParent",
      "ListChildren",
      "ListCreateAccountStatus",
      "ListHandshakesForAccount",
      "ListHandshakesForOrganization",
      "ListOrganizationalUnitsForParent",
      "ListParents",
      "ListPolicies",
      "ListPoliciesForTarget",
      "ListRoots",
      "ListTargetsForPolicy",
      "MoveAccount",
      "RemoveAccountFromOrganization",
      "UpdateOrganizationalUnit",
      "UpdatePolicy"
    ],
    "HasResource": "!0",
    "StringPrefix": "organizations"
  },
  "AWS Price List": {
    "Actions": [
      "DescribeServices",
      "GetAttributeValues",
      "GetProducts"
    ],
    "HasResource": "!1",
    "StringPrefix": "pricing"
  },
  "AWS Resource Groups": {
    "Actions": [
      "CreateGroup",
      "DeleteGroup",
      "GetGroup",
      "GetGroupQuery",
      "GetTags",
      "ListGroupResources",
      "ListGroups",
      "SearchResources",
      "Tag",
      "Untag",
      "UpdateGroup",
      "UpdateGroupQuery"
    ],
    "HasResource": "!1",
    "StringPrefix": "resource-groups"
  },
  "AWS Security Token Service": {
    "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssumeRole",
      "AssumeRoleWithSAML",
      "AssumeRoleWithWebIdentity",
      "DecodeAuthorizationMessage",
      "GetCallerIdentity",
      "GetFederationToken",
      "GetSessionToken"
    ],
    "HasResource": "!0",
    "StringPrefix": "sts",
    "conditionKeys": [
      "<web-identity-provider>:aud",
      "<web-identity-provider>:oaud",
      "<web-identity-provider>:sub",
      "aws:FederatedProvider",
      "saml:aud",
      "saml:doc",
      "saml:iss",
      "saml:namequalifier",
      "saml:sub",
      "saml:sub_type"
    ]
  },
  "AWS Serverless Application Repository": {
    "ARNFormat": "arn:aws:serverlessrepo:<region>:<account-id>:<resource-type>/<resource_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateApplication",
      "CreateApplicationVersion",
      "CreateCloudFormationChangeSet",
      "DeleteApplication",
      "GetApplication",
      "GetApplicationPolicy",
      "ListApplicationVersions",
      "ListApplications",
      "PutApplicationPolicy",
      "SearchApplications",
      "UpdateApplication"
    ],
    "HasResource": "!0",
    "StringPrefix": "serverlessrepo"
  },
  "AWS Service Catalog": {
    "ARNFormat": "arn:aws:(catalog|servicecatalog):<region>:<account>:<resourceType>/<id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptPortfolioShare",
      "AssociatePrincipalWithPortfolio",
      "AssociateProductWithPortfolio",
      "CreateConstraint",
      "CreatePortfolio",
      "CreatePortfolioShare",
      "CreateProduct",
      "CreateProvisioningArtifact",
      "DeleteConstraint",
      "DeletePortfolio",
      "DeletePortfolioShare",
      "DeleteProduct",
      "DeleteProvisioningArtifact",
      "DescribeConstraint",
      "DescribePortfolio",
      "DescribeProduct",
      "DescribeProductAsAdmin",
      "DescribeProductView",
      "DescribeProvisioningArtifact",
      "DescribeProvisioningParameters",
      "DescribeRecord",
      "DisassociatePrincipalFromPortfolio",
      "DisassociateProductFromPortfolio",
      "ListAcceptedPortfolioShares",
      "ListConstraintsForPortfolio",
      "ListLaunchPaths",
      "ListPortfolioAccess",
      "ListPortfolios",
      "ListPortfoliosForProduct",
      "ListPrincipalsForPortfolio",
      "ListProvisioningArtifacts",
      "ListRecordHistory",
      "ProvisionProduct",
      "RejectPortfolioShare",
      "ScanProvisionedProducts",
      "SearchProducts",
      "SearchProductsAsAdmin",
      "TerminateProvisionedProduct",
      "UpdateConstraint",
      "UpdatePortfolio",
      "UpdateProduct",
      "UpdateProvisionedProduct",
      "UpdateProvisioningArtifact"
    ],
    "HasResource": "!1",
    "StringPrefix": "servicecatalog",
    "conditionKeys": [
      "servicecatalog:accountLevel",
      "servicecatalog:roleLevel",
      "servicecatalog:userLevel"
    ]
  },
  "AWS Shield": {
    "ARNFormat": "arn:aws:shield::<account_ID>:<resource>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateProtection",
      "CreateSubscription",
      "DeleteProtection",
      "DeleteSubscription",
      "DescribeAttack",
      "DescribeProtection",
      "DescribeSubscription",
      "ListAttacks",
      "ListProtections"
    ],
    "HasResource": "!0",
    "StringPrefix": "shield"
  },
  "AWS Snowball": {
    "Actions": [
      "CancelCluster",
      "CancelJob",
      "CreateAddress",
      "CreateCluster",
      "CreateJob",
      "DescribeAddress",
      "DescribeAddresses",
      "DescribeCluster",
      "DescribeJob",
      "GetJobManifest",
      "GetJobUnlockCode",
      "GetSnowballUsage",
      "ListClusterJobs",
      "ListClusters",
      "ListJobs",
      "UpdateCluster",
      "UpdateJob"
    ],
    "HasResource": "!1",
    "StringPrefix": "snowball"
  },
  "AWS Step Functions": {
    "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>:<resourceName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateActivity",
      "CreateStateMachine",
      "DeleteActivity",
      "DeleteStateMachine",
      "DescribeActivity",
      "DescribeExecution",
      "DescribeStateMachine",
      "DescribeStateMachineForExecution",
      "GetActivityTask",
      "GetExecutionHistory",
      "ListActivities",
      "ListExecutions",
      "ListStateMachines",
      "SendTaskFailure",
      "SendTaskHeartbeat",
      "SendTaskSuccess",
      "StartExecution",
      "StopExecution",
      "UpdateStateMachine"
    ],
    "HasResource": "!0",
    "StringPrefix": "states"
  },
  "AWS Support": {
    "Actions": [
      "AddAttachmentsToSet",
      "AddCommunicationToCase",
      "CreateCase",
      "DescribeAttachment",
      "DescribeCases",
      "DescribeCommunications",
      "DescribeServices",
      "DescribeSeverityLevels",
      "DescribeTrustedAdvisorCheckRefreshStatuses",
      "DescribeTrustedAdvisorCheckResult",
      "DescribeTrustedAdvisorCheckSummaries",
      "DescribeTrustedAdvisorChecks",
      "RefreshTrustedAdvisorCheck",
      "ResolveCase"
    ],
    "HasResource": "!1",
    "StringPrefix": "support"
  },
  "AWS Trusted Advisor": {
    "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DescribeCheckItems",
      "DescribeCheckRefreshStatuses",
      "DescribeCheckSummaries",
      "DescribeNotificationPreferences",
      "ExcludeCheckItems",
      "IncludeCheckItems",
      "RefreshCheck",
      "UpdateNotificationPreferences"
    ],
    "HasResource": "!0",
    "StringPrefix": "trustedadvisor"
  },
  "AWS WAF": {
    "ARNFormat": "arn:aws:waf::<account_ID>:<resource>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateByteMatchSet",
      "CreateGeoMatchSet",
      "CreateIPSet",
      "CreateRateBasedRule",
      "CreateRegexMatchSet",
      "CreateRegexPatternSet",
      "CreateRule",
      "CreateSizeConstraintSet",
      "CreateSqlInjectionMatchSet",
      "CreateWebACL",
      "CreateXssMatchSet",
      "DeleteByteMatchSet",
      "DeleteGeoMatchSet",
      "DeleteIPSet",
      "DeleteRateBasedRule",
      "DeleteRegexMatchSet",
      "DeleteRegexPatternSet",
      "DeleteRule",
      "DeleteSizeConstraintSet",
      "DeleteSqlInjectionMatchSet",
      "DeleteWebACL",
      "DeleteXssMatchSet",
      "GetByteMatchSet",
      "GetChangeToken",
      "GetChangeTokenStatus",
      "GetGeoMatchSet",
      "GetIPSet",
      "GetRateBasedRule",
      "GetRateBasedRuleManagedKeys",
      "GetRegexMatchSet",
      "GetRegexPatternSet",
      "GetRule",
      "GetSampledRequests",
      "GetSizeConstraintSet",
      "GetSqlInjectionMatchSet",
      "GetWebACL",
      "GetXssMatchSet",
      "ListByteMatchSets",
      "ListGeoMatchSets",
      "ListIPSets",
      "ListRateBasedRules",
      "ListRegexMatchSets",
      "ListRegexPatternSets",
      "ListRules",
      "ListSizeConstraintSets",
      "ListSqlInjectionMatchSets",
      "ListWebACLs",
      "ListXssMatchSets",
      "UpdateByteMatchSet",
      "UpdateGeoMatchSet",
      "UpdateIPSet",
      "UpdateRateBasedRule",
      "UpdateRegexMatchSet",
      "UpdateRegexPatternSet",
      "UpdateRule",
      "UpdateSizeConstraintSet",
      "UpdateSqlInjectionMatchSet",
      "UpdateWebACL",
      "UpdateXssMatchSet"
    ],
    "HasResource": "!0",
    "StringPrefix": "waf"
  },
  "AWS WAF Regional": {
    "ARNFormat": "arn:aws:waf-regional:<region>:<account_ID>:<resource>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateWebACL",
      "CreateByteMatchSet",
      "CreateGeoMatchSet",
      "CreateIPSet",
      "CreateRateBasedRule",
      "CreateRegexMatchSet",
      "CreateRegexPatternSet",
      "CreateRule",
      "CreateSizeConstraintSet",
      "CreateSqlInjectionMatchSet",
      "CreateWebACL",
      "CreateXssMatchSet",
      "DeleteByteMatchSet",
      "DeleteGeoMatchSet",
      "DeleteIPSet",
      "DeleteRateBasedRule",
      "DeleteRegexMatchSet",
      "DeleteRegexPatternSet",
      "DeleteRule",
      "DeleteSizeConstraintSet",
      "DeleteSqlInjectionMatchSet",
      "DeleteWebACL",
      "DeleteXssMatchSet",
      "DisassociateWebACL",
      "GetByteMatchSet",
      "GetChangeToken",
      "GetChangeTokenStatus",
      "GetGeoMatchSet",
      "GetIPSet",
      "GetRateBasedRule",
      "GetRateBasedRuleManagedKeys",
      "GetRegexMatchSet",
      "GetRegexPatternSet",
      "GetRule",
      "GetSampledRequests",
      "GetSizeConstraintSet",
      "GetSqlInjectionMatchSet",
      "GetWebACL",
      "GetWebACLForResource",
      "GetXssMatchSet",
      "ListByteMatchSets",
      "ListGeoMatchSets",
      "ListIPSets",
      "ListRateBasedRules",
      "ListRegexMatchSets",
      "ListRegexPatternSets",
      "ListResourcesForWebACL",
      "ListRules",
      "ListSizeConstraintSets",
      "ListSqlInjectionMatchSets",
      "ListWebACLs",
      "ListXssMatchSets",
      "UpdateByteMatchSet",
      "UpdateGeoMatchSet",
      "UpdateIPSet",
      "UpdateRateBasedRule",
      "UpdateRegexMatchSet",
      "UpdateRegexPatternSet",
      "UpdateRule",
      "UpdateSizeConstraintSet",
      "UpdateSqlInjectionMatchSet",
      "UpdateWebACL",
      "UpdateXssMatchSet"
    ],
    "HasResource": "!0",
    "StringPrefix": "waf-regional"
  },
  "AWS XRay": {
    "Actions": [
      "BatchGetTraces",
      "GetServiceGraph",
      "GetTraceGraph",
      "GetTraceSummaries",
      "PutTelemetryRecords",
      "PutTraceSegments"
    ],
    "HasResource": "!1",
    "StringPrefix": "xray"
  },
  "Alexa for Business": {
    "ARNFormat": "arn:aws:a4b:<region>:<account-id>:<resource-type>/<resource_id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateDeviceWithRoom",
      "AssociateSkillGroupWithRoom",
      "CreateProfile",
      "CreateRoom",
      "CreateSkillGroup",
      "CreateUser",
      "DeleteProfile",
      "DeleteRoom",
      "DeleteRoomSkillParameter",
      "DeleteSkillGroup",
      "DeleteUser",
      "DisassociateDeviceFromRoom",
      "DisassociateSkillGroupFromRoom",
      "GetDevice",
      "GetProfile",
      "GetRoom",
      "GetRoomSkillParameter",
      "GetSkillGroup",
      "ListSkills",
      "ListTags",
      "PutRoomSkillParameter",
      "ResolveRoom",
      "RevokeInvitation",
      "SearchDevices",
      "SearchProfiles",
      "SearchRooms",
      "SearchSkillGroups",
      "SearchUsers",
      "SendInvitation",
      "StartDeviceSync",
      "TagResource",
      "UntagResource",
      "UpdateDevice",
      "UpdateProfile",
      "UpdateRoom",
      "UpdateSkillGroup"
    ],
    "HasResource": "!0",
    "StringPrefix": "a4b"
  },
  "Amazon API Gateway": {
    "ARNFormat": "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "InvalidateCache",
      "Invoke"
    ],
    "HasResource": "!0",
    "StringPrefix": "execute-api"
  },
  "Amazon AWS Cloud Contact Center": {
    "ARNFormat": "arn:aws:connect",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateInstance",
      "DescribeInstance",
      "DestroyInstance",
      "GetFederationToken",
      "GetFederationTokens",
      "ListInstances",
      "ModifyInstance"
    ],
    "HasResource": "!0",
    "StringPrefix": "connect"
  },
  "Amazon AppStream": {
    "ARNFormat": "arn:aws:appstream:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateFleet",
      "CreateDirectoryConfig",
      "CreateFleet",
      "CreateImageBuilder",
      "CreateImageBuilderStreamingURL",
      "CreateStack",
      "CreateStreamingURL",
      "DeleteDirectoryConfig",
      "DeleteFleet",
      "DeleteImage",
      "DeleteImageBuilder",
      "DeleteStack",
      "DescribeDirectoryConfigs",
      "DescribeFleets",
      "DescribeImageBuilders",
      "DescribeImages",
      "DescribeSessions",
      "DescribeStacks",
      "DisassociateFleet",
      "ExpireSession",
      "ListAssociatedFleets",
      "ListAssociatedStacks",
      "ListTagsForResource",
      "StartFleet",
      "StartImageBuilder",
      "StopFleet",
      "StopImageBuilder",
      "Stream",
      "TagResource",
      "UntagResource",
      "UpdateDirectoryConfig",
      "UpdateFleet",
      "UpdateStack"
    ],
    "HasResource": "!0",
    "StringPrefix": "appstream",
    "conditionKeys": [
      "appstream:userId"
    ]
  },
  "Amazon Athena": {
    "Actions": [
      "BatchGetNamedQuery",
      "BatchGetQueryExecution",
      "CancelQueryExecution",
      "CreateNamedQuery",
      "DeleteNamedQuery",
      "GetCatalogs",
      "GetExecutionEngine",
      "GetExecutionEngines",
      "GetNamedQuery",
      "GetNamespace",
      "GetNamespaces",
      "GetQueryExecution",
      "GetQueryExecutions",
      "GetQueryResults",
      "GetTable",
      "GetTables",
      "ListNamedQueries",
      "ListQueryExecutions",
      "RunQuery",
      "StartQueryExecution",
      "StopQueryExecution"
    ],
    "HasResource": "!1",
    "StringPrefix": "athena"
  },
  "Amazon Chime": {
    "Actions": [
      "AcceptDelegate",
      "ActivateUsers",
      "AddDomain",
      "AddOrUpdateGroups",
      "AuthorizeDirectory",
      "ConnectDirectory",
      "CreateAccount",
      "CreateCDRBucket",
      "DeleteAccount",
      "DeleteCDRBucket",
      "DeleteDelegate",
      "DeleteDomain",
      "DeleteGroups",
      "DisconnectDirectory",
      "GetAccount",
      "GetAccountResource",
      "GetAccountSettings",
      "GetCDRBucket",
      "GetDomain",
      "GetUser",
      "GetUserByEmail",
      "InviteDelegate",
      "InviteUsers",
      "ListAccounts",
      "ListCDRBucket",
      "ListDelegates",
      "ListDirectories",
      "ListDomains",
      "ListGroups",
      "ListUsers",
      "LogoutUser",
      "RenameAccount",
      "RenewDelegate",
      "ResetAccountResource",
      "ResetPersonalPin",
      "SubmitSupportRequest",
      "SuspendUsers",
      "UnauthorizeDirectory",
      "UpdateAccountResource",
      "UpdateAccountSettings",
      "UpdateCDRBucket",
      "UpdateSupportedLicenses",
      "UpdateUserLicenses",
      "ValidateAccountResource",
      "ValidateDelegate"
    ],
    "HasResource": "!1",
    "StringPrefix": "chime"
  },
  "Amazon Cloud Directory": {
    "ARNFormat": "arn:aws:clouddirectory:<region>:<accountId>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddFacetToObject",
      "ApplySchema",
      "AttachObject",
      "AttachPolicy",
      "AttachToIndex",
      "AttachTypedLink",
      "BatchRead",
      "BatchWrite",
      "CreateDirectory",
      "CreateFacet",
      "CreateIndex",
      "CreateObject",
      "CreateSchema",
      "CreateTypedLinkFacet",
      "DeleteDirectory",
      "DeleteFacet",
      "DeleteObject",
      "DeleteSchema",
      "DeleteTypedLinkFacet",
      "DetachFromIndex",
      "DetachObject",
      "DetachPolicy",
      "DetachTypedLink",
      "DisableDirectory",
      "EnableDirectory",
      "GetDirectory",
      "GetFacet",
      "GetObjectInformation",
      "GetSchemaAsJson",
      "GetTypedLinkFacetInformation",
      "ListAppliedSchemaArns",
      "ListAttachedIndices",
      "ListDevelopmentSchemaArns",
      "ListDirectories",
      "ListFacetAttributes",
      "ListFacetNames",
      "ListIncomingTypedLinks",
      "ListIndex",
      "ListObjectAttributes",
      "ListObjectChildren",
      "ListObjectParentPaths",
      "ListObjectParents",
      "ListObjectPolicies",
      "ListOutgoingTypedLinks",
      "ListPolicyAttachments",
      "ListPublishedSchemaArns",
      "ListTagsForResource",
      "ListTypedLinkFacetAttributes",
      "ListTypedLinkFacetNames",
      "LookupPolicy",
      "PublishSchema",
      "PutSchemaFromJson",
      "RemoveFacetFromObject",
      "TagResource",
      "UntagResource",
      "UpdateFacet",
      "UpdateObjectAttributes",
      "UpdateSchema",
      "UpdateTypedLinkFacet"
    ],
    "HasResource": "!0",
    "StringPrefix": "clouddirectory"
  },
  "Amazon CloudFront": {
    "Actions": [
      "CreateCloudFrontOriginAccessIdentity",
      "CreateDistribution",
      "CreateDistributionWithTags",
      "CreateInvalidation",
      "CreateStreamingDistribution",
      "CreateStreamingDistributionWithTags",
      "DeleteCloudFrontOriginAccessIdentity",
      "DeleteDistribution",
      "DeleteStreamingDistribution",
      "GetCloudFrontOriginAccessIdentity",
      "GetCloudFrontOriginAccessIdentityConfig",
      "GetDistribution",
      "GetDistributionConfig",
      "GetInvalidation",
      "GetStreamingDistribution",
      "GetStreamingDistributionConfig",
      "ListCloudFrontOriginAccessIdentities",
      "ListDistributions",
      "ListDistributionsByWebACLId",
      "ListInvalidations",
      "ListStreamingDistributions",
      "ListTagsForResource",
      "TagResource",
      "UntagResource",
      "UpdateCloudFrontOriginAccessIdentity",
      "UpdateDistribution",
      "UpdateStreamingDistribution"
    ],
    "HasResource": "!1",
    "StringPrefix": "cloudfront"
  },
  "Amazon CloudSearch": {
    "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "BuildSuggesters",
      "CreateDomain",
      "DefineAnalysisScheme",
      "DefineExpression",
      "DefineIndexField",
      "DefineSuggester",
      "DeleteAnalysisScheme",
      "DeleteDomain",
      "DeleteExpression",
      "DeleteIndexField",
      "DeleteSuggester",
      "DescribeAnalysisSchemes",
      "DescribeAvailabilityOptions",
      "DescribeDomains",
      "DescribeExpressions",
      "DescribeIndexFields",
      "DescribeScalingParameters",
      "DescribeServiceAccessPolicies",
      "DescribeSuggesters",
      "IndexDocuments",
      "ListDomainNames",
      "ListTags",
      "RemoveTags",
      "UpdateAvailabilityOptions",
      "UpdateScalingParameters",
      "UpdateServiceAccessPolicies",
      "document",
      "search",
      "suggest"
    ],
    "HasResource": "!0",
    "StringPrefix": "cloudsearch"
  },
  "Amazon CloudWatch": {
    "Actions": [
      "DeleteAlarms",
      "DeleteDashboards",
      "DescribeAlarmHistory",
      "DescribeAlarms",
      "DescribeAlarmsForMetric",
      "DisableAlarmActions",
      "EnableAlarmActions",
      "GetDashboard",
      "GetMetricData",
      "GetMetricStatistics",
      "ListDashboards",
      "ListMetrics",
      "PutDashboard",
      "PutMetricAlarm",
      "PutMetricData",
      "SetAlarmState"
    ],
    "HasResource": "!1",
    "StringPrefix": "cloudwatch"
  },
  "Amazon CloudWatch Events": {
    "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DeleteRule",
      "DescribeRule",
      "DisableRule",
      "EnableRule",
      "ListRuleNamesByTarget",
      "ListRules",
      "ListTargetsByRule",
      "PutEvents",
      "PutRule",
      "PutTargets",
      "RemoveTargets",
      "TestEventPattern"
    ],
    "HasResource": "!0",
    "StringPrefix": "events",
    "conditionKeys": [
      "events:TargetArn",
      "events:detail-type",
      "events:detail.userIdentity.principalId",
      "events:source"
    ]
  },
  "Amazon CloudWatch Logs": {
    "ARNFormat": "arn:aws:logs:.+:.+:.+",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateKmsKey",
      "CancelExportTask",
      "CreateExportTask",
      "CreateLogGroup",
      "CreateLogStream",
      "DeleteDestination",
      "DeleteLogGroup",
      "DeleteLogStream",
      "DeleteMetricFilter",
      "DeleteResourcePolicy",
      "DeleteRetentionPolicy",
      "DeleteSubscriptionFilter",
      "DescribeDestinations",
      "DescribeExportTasks",
      "DescribeLogGroups",
      "DescribeLogStreams",
      "DescribeMetricFilters",
      "DescribeResourcePolicies",
      "DescribeSubscriptionFilters",
      "DisassociateKmsKey",
      "FilterLogEvents",
      "GetLogEvents",
      "ListTagsLogGroup",
      "PutDestination",
      "PutDestinationPolicy",
      "PutLogEvents",
      "PutMetricFilter",
      "PutResourcePolicy",
      "PutRetentionPolicy",
      "PutSubscriptionFilter",
      "TagLogGroup",
      "TestMetricFilter",
      "UntagLogGroup"
    ],
    "HasResource": "!0",
    "StringPrefix": "logs"
  },
  "Amazon Cognito Identity": {
    "ARNFormat": "arn:aws:cognito-identity:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateIdentityPool",
      "DeleteIdentities",
      "DeleteIdentityPool",
      "DescribeIdentity",
      "DescribeIdentityPool",
      "GetCredentialsForIdentity",
      "GetId",
      "GetIdentityPoolRoles",
      "GetOpenIdToken",
      "GetOpenIdTokenForDeveloperIdentity",
      "ListIdentities",
      "ListIdentityPools",
      "LookupDeveloperIdentity",
      "MergeDeveloperIdentities",
      "SetIdentityPoolRoles",
      "UnlinkDeveloperIdentity",
      "UnlinkIdentity",
      "UpdateIdentityPool"
    ],
    "HasResource": "!0",
    "StringPrefix": "cognito-identity"
  },
  "Amazon Cognito Sync": {
    "ARNFormat": "arn:aws:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BulkPublish",
      "DeleteDataset",
      "DescribeDataset",
      "DescribeIdentityPoolUsage",
      "DescribeIdentityUsage",
      "GetBulkPublishDetails",
      "GetCognitoEvents",
      "GetIdentityPoolConfiguration",
      "ListDatasets",
      "ListIdentityPoolUsage",
      "ListRecords",
      "QueryRecords",
      "RegisterDevice",
      "SetCognitoEvents",
      "SetDatasetConfiguration",
      "SetIdentityPoolConfiguration",
      "SubscribeToDataset",
      "UnsubscribeFromDataset",
      "UpdateRecords"
    ],
    "HasResource": "!0",
    "StringPrefix": "cognito-sync"
  },
  "Amazon Cognito User Pools": {
    "ARNFormat": "arn:aws:cognito-idp:<region>:<account>:<resourceType>/<resourcePath>:",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddCustomAttributes",
      "AdminAddUserToGroup",
      "AdminConfirmSignUp",
      "AdminCreateUser",
      "AdminDeleteUser",
      "AdminDeleteUserAttributes",
      "AdminDisableUser",
      "AdminEnableUser",
      "AdminForgetDevice",
      "AdminGetDevice",
      "AdminGetUser",
      "AdminInitiateAuth",
      "AdminListDevices",
      "AdminListGroupsForUser",
      "AdminListUserAuthEvents",
      "AdminRemoveUserFromGroup",
      "AdminResetUserPassword",
      "AdminRespondToAuthChallenge",
      "AdminSetUserMFAPreference",
      "AdminSetUserSettings",
      "AdminUpdateAuthEventFeedback",
      "AdminUpdateDeviceStatus",
      "AdminUpdateUserAttributes",
      "AdminUserGlobalSignOut",
      "ChangePassword",
      "ConfirmDevice",
      "ConfirmForgotPassword",
      "ConfirmSignUp",
      "CreateGroup",
      "CreateUserImportJob",
      "CreateUserPool",
      "CreateUserPoolClient",
      "DeleteGroup",
      "DeleteUser",
      "DeleteUserAttributes",
      "DeleteUserPool",
      "DeleteUserPoolClient",
      "DescribeRiskConfiguration",
      "DescribeUserImportJob",
      "DescribeUserPool",
      "DescribeUserPoolClient",
      "ForgetDevice",
      "ForgotPassword",
      "GetCSVHeader",
      "GetDevice",
      "GetGroup",
      "GetUser",
      "GetUserAttributeVerificationCode",
      "GetUserPoolMfaConfig",
      "GlobalSignOut",
      "InitiateAuth",
      "ListDevices",
      "ListGroups",
      "ListUserImportJobs",
      "ListUserPoolClients",
      "ListUsersInGroup",
      "ResendConfirmationCode",
      "RespondToAuthChallenge",
      "SetRiskConfiguration",
      "SetUserMFAPreference",
      "SetUserPoolMfaConfig",
      "SetUserSettings",
      "SignUp",
      "StartUserImportJob",
      "StopUserImportJob",
      "UpdateAuthEventFeedback",
      "UpdateDeviceStatus",
      "UpdateGroup",
      "UpdateUserAttributes",
      "UpdateUserPool",
      "UpdateUserPoolClient",
      "VerifyUserAttribute"
    ],
    "HasResource": "!0",
    "StringPrefix": "cognito-idp"
  },
  "Amazon Comprehend": {
    "ARNFormat": "arn:aws:comprehend:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchDetectDominantLanguage",
      "BatchDetectEntities",
      "BatchDetectKeyPhrases",
      "BatchDetectSentiment",
      "DescribeTopicsDetectionJob",
      "DetectDominantLanguage",
      "DetectEntities",
      "DetectKeyPhrases",
      "DetectSentiment",
      "ListTopicsDetectionJobs",
      "StartTopicsDetectionJob"
    ],
    "HasResource": "!1",
    "StringPrefix": "comprehend"
  },
  "Amazon DynamoDB": {
    "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:<resourceType>/<resourcePath>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchGetItem",
      "BatchWriteItem",
      "CreateBackup",
      "CreateTable",
      "DeleteBackup",
      "DeleteItem",
      "DeleteTable",
      "DescribeBackup",
      "DescribeContinuousBackups",
      "DescribeLimits",
      "DescribeReservedCapacity",
      "DescribeReservedCapacityOfferings",
      "DescribeStream",
      "DescribeTable",
      "DescribeTimeToLive",
      "GetItem",
      "GetRecords",
      "GetShardIterator",
      "ListBackups",
      "ListStreams",
      "ListTables",
      "ListTagsOfResource",
      "PurchaseReservedCapacityOfferings",
      "PutItem",
      "Query",
      "RestoreTableFromBackup",
      "RestoreTableToPointInTime",
      "Scan",
      "TagResource",
      "UntagResource",
      "UpdateContinuousBackups",
      "UpdateItem",
      "UpdateTable",
      "UpdateTimeToLive"
    ],
    "HasResource": "!0",
    "StringPrefix": "dynamodb",
    "conditionKeys": [
      "dynamodb:Attributes",
      "dynamodb:LeadingKeys",
      "dynamodb:ReturnConsumedCapacity",
      "dynamodb:ReturnValues",
      "dynamodb:Select"
    ]
  },
  "Amazon DynamoDB Accelerator (DAX)": {
    "ARNFormat": "arn:aws:dax:<region>:<accountId>:cache/<clustername>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchGetItem",
      "BatchWriteItem",
      "CreateCluster",
      "CreateParameterGroup",
      "CreateSubnetGroup",
      "DecreaseReplicationFactor",
      "DeleteCluster",
      "DeleteItem",
      "DeleteParameterGroup",
      "DeleteSubnetGroup",
      "DescribeClusters",
      "DescribeDefaultParameters",
      "DescribeEvents",
      "DescribeParameterGroups",
      "DescribeParameters",
      "DescribeSubnetGroups",
      "DescribeTable",
      "GetItem",
      "IncreaseReplicationFactor",
      "ListTables",
      "ListTags",
      "PutItem",
      "Query",
      "RebootNode",
      "Scan",
      "TagResource",
      "UntagResource",
      "UpdateCluster",
      "UpdateItem",
      "UpdateParameterGroup",
      "UpdateSubnetGroup"
    ],
    "HasResource": "!0",
    "StringPrefix": "dax"
  },
  "Amazon EC2": {
    "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptReservedInstancesExchangeQuote",
      "AcceptVpcEndpointConnections",
      "AcceptVpcPeeringConnection",
      "AllocateAddress",
      "AllocateHosts",
      "AssignIpv6Addresses",
      "AssignPrivateIpAddresses",
      "AssociateAddress",
      "AssociateDhcpOptions",
      "AssociateIamInstanceProfile",
      "AssociateRouteTable",
      "AssociateSubnetCidrBlock",
      "AssociateVpcCidrBlock",
      "AttachClassicLinkVpc",
      "AttachInternetGateway",
      "AttachNetworkInterface",
      "AttachVolume",
      "AttachVpnGateway",
      "AuthorizeSecurityGroupEgress",
      "AuthorizeSecurityGroupIngress",
      "BundleInstance",
      "CancelBundleTask",
      "CancelConversionTask",
      "CancelExportTask",
      "CancelImportTask",
      "CancelReservedInstancesListing",
      "CancelSpotFleetRequests",
      "CancelSpotInstanceRequests",
      "ConfirmProductInstance",
      "CopyFpgaImage",
      "CopyImage",
      "CopySnapshot",
      "CreateCustomerGateway",
      "CreateDefaultSubnet",
      "CreateDefaultVpc",
      "CreateDhcpOptions",
      "CreateEgressOnlyInternetGateway",
      "CreateFlowLogs",
      "CreateFpgaImage",
      "CreateImage",
      "CreateInstanceExportTask",
      "CreateInternetGateway",
      "CreateKeyPair",
      "CreateLaunchTemplate",
      "CreateLaunchTemplateVersion",
      "CreateNatGateway",
      "CreateNetworkAcl",
      "CreateNetworkAclEntry",
      "CreateNetworkInterface",
      "CreateNetworkInterfacePermission",
      "CreatePlacementGroup",
      "CreateReservedInstancesListing",
      "CreateRoute",
      "CreateRouteTable",
      "CreateSecurityGroup",
      "CreateSnapshot",
      "CreateSpotDatafeedSubscription",
      "CreateSubnet",
      "CreateTags",
      "CreateVolume",
      "CreateVpc",
      "CreateVpcEndpoint",
      "CreateVpcEndpointConnectionNotification",
      "CreateVpcEndpointServiceConfiguration",
      "CreateVpcPeeringConnection",
      "CreateVpnConnection",
      "CreateVpnConnectionRoute",
      "CreateVpnGateway",
      "DeleteCustomerGateway",
      "DeleteDhcpOptions",
      "DeleteEgressOnlyInternetGateway",
      "DeleteFlowLogs",
      "DeleteFpgaImage",
      "DeleteInternetGateway",
      "DeleteKeyPair",
      "DeleteLaunchTemplate",
      "DeleteLaunchTemplateVersions",
      "DeleteNatGateway",
      "DeleteNetworkAcl",
      "DeleteNetworkAclEntry",
      "DeleteNetworkInterface",
      "DeleteNetworkInterfacePermission",
      "DeletePlacementGroup",
      "DeleteRoute",
      "DeleteRouteTable",
      "DeleteSecurityGroup",
      "DeleteSnapshot",
      "DeleteSpotDatafeedSubscription",
      "DeleteSubnet",
      "DeleteTags",
      "DeleteVolume",
      "DeleteVpc",
      "DeleteVpcEndpointConnectionNotifications",
      "DeleteVpcEndpointServiceConfigurations",
      "DeleteVpcEndpoints",
      "DeleteVpcPeeringConnection",
      "DeleteVpnConnection",
      "DeleteVpnConnectionRoute",
      "DeleteVpnGateway",
      "DeregisterImage",
      "DescribeAccountAttributes",
      "DescribeAddresses",
      "DescribeAvailabilityZones",
      "DescribeBundleTasks",
      "DescribeClassicLinkInstances",
      "DescribeConversionTasks",
      "DescribeCustomerGateways",
      "DescribeDhcpOptions",
      "DescribeEgressOnlyInternetGateways",
      "DescribeElasticGpus",
      "DescribeExportTasks",
      "DescribeFlowLogs",
      "DescribeFpgaImageAttribute",
      "DescribeFpgaImages",
      "DescribeHostReservationOfferings",
      "DescribeHostReservations",
      "DescribeHosts",
      "DescribeIamInstanceProfileAssociations",
      "DescribeIdFormat",
      "DescribeIdentityIdFormat",
      "DescribeImageAttribute",
      "DescribeImages",
      "DescribeImportImageTasks",
      "DescribeImportSnapshotTasks",
      "DescribeInstanceAttribute",
      "DescribeInstanceCreditSpecifications",
      "DescribeInstanceStatus",
      "DescribeInstances",
      "DescribeInternetGateways",
      "DescribeKeyPairs",
      "DescribeLaunchTemplateVersions",
      "DescribeLaunchTemplates",
      "DescribeMovingAddresses",
      "DescribeNatGateways",
      "DescribeNetworkAcls",
      "DescribeNetworkInterfaceAttribute",
      "DescribeNetworkInterfacePermissions",
      "DescribeNetworkInterfaces",
      "DescribePlacementGroups",
      "DescribePrefixLists",
      "DescribeRegions",
      "DescribeReservedInstances",
      "DescribeReservedInstancesListings",
      "DescribeReservedInstancesModifications",
      "DescribeReservedInstancesOfferings",
      "DescribeRouteTables",
      "DescribeScheduledInstanceAvailability",
      "DescribeScheduledInstances",
      "DescribeSecurityGroupReferences",
      "DescribeSecurityGroups",
      "DescribeSnapshotAttribute",
      "DescribeSnapshots",
      "DescribeSpotDatafeedSubscription",
      "DescribeSpotFleetInstances",
      "DescribeSpotFleetRequestHistory",
      "DescribeSpotFleetRequests",
      "DescribeSpotInstanceRequests",
      "DescribeSpotPriceHistory",
      "DescribeStaleSecurityGroups",
      "DescribeSubnets",
      "DescribeTags",
      "DescribeVolumeAttribute",
      "DescribeVolumeStatus",
      "DescribeVolumes",
      "DescribeVolumesModifications",
      "DescribeVpcAttribute",
      "DescribeVpcClassicLink",
      "DescribeVpcClassicLinkDnsSupport",
      "DescribeVpcEndpointConnectionNotifications",
      "DescribeVpcEndpointConnections",
      "DescribeVpcEndpointServiceConfigurations",
      "DescribeVpcEndpointServicePermissions",
      "DescribeVpcEndpointServices",
      "DescribeVpcEndpoints",
      "DescribeVpcPeeringConnections",
      "DescribeVpcs",
      "DescribeVpnConnections",
      "DescribeVpnGateways",
      "DetachClassicLinkVpc",
      "DetachInternetGateway",
      "DetachNetworkInterface",
      "DetachVolume",
      "DetachVpnGateway",
      "DisableVgwRoutePropagation",
      "DisableVpcClassicLink",
      "DisableVpcClassicLinkDnsSupport",
      "DisassociateAddress",
      "DisassociateIamInstanceProfile",
      "DisassociateRouteTable",
      "DisassociateSubnetCidrBlock",
      "DisassociateVpcCidrBlock",
      "EnableVgwRoutePropagation",
      "EnableVolumeIO",
      "EnableVpcClassicLink",
      "EnableVpcClassicLinkDnsSupport",
      "GetConsoleOutput",
      "GetConsoleScreenshot",
      "GetHostReservationPurchasePreview",
      "GetLaunchTemplateData",
      "GetPasswordData",
      "GetReservedInstancesExchangeQuote",
      "ImportImage",
      "ImportInstance",
      "ImportKeyPair",
      "ImportSnapshot",
      "ImportVolume",
      "ModifyFpgaImageAttribute",
      "ModifyHosts",
      "ModifyIdFormat",
      "ModifyIdentityIdFormat",
      "ModifyImageAttribute",
      "ModifyInstanceAttribute",
      "ModifyInstanceCreditSpecification",
      "ModifyInstancePlacement",
      "ModifyLaunchTemplate",
      "ModifyNetworkInterfaceAttribute",
      "ModifyReservedInstances",
      "ModifySnapshotAttribute",
      "ModifySpotFleetRequest",
      "ModifySubnetAttribute",
      "ModifyVolume",
      "ModifyVolumeAttribute",
      "ModifyVpcAttribute",
      "ModifyVpcEndpoint",
      "ModifyVpcEndpointConnectionNotification",
      "ModifyVpcEndpointServiceConfiguration",
      "ModifyVpcEndpointServicePermissions",
      "ModifyVpcPeeringConnectionOptions",
      "ModifyVpcTenancy",
      "MonitorInstances",
      "MoveAddressToVpc",
      "PurchaseHostReservation",
      "PurchaseReservedInstancesOffering",
      "PurchaseScheduledInstances",
      "RebootInstances",
      "RegisterImage",
      "RejectVpcEndpointConnections",
      "RejectVpcPeeringConnection",
      "ReleaseAddress",
      "ReleaseHosts",
      "ReplaceIamInstanceProfileAssociation",
      "ReplaceNetworkAclAssociation",
      "ReplaceNetworkAclEntry",
      "ReplaceRoute",
      "ReplaceRouteTableAssociation",
      "ReportInstanceStatus",
      "RequestSpotFleet",
      "RequestSpotInstances",
      "ResetFpgaImageAttribute",
      "ResetImageAttribute",
      "ResetInstanceAttribute",
      "ResetNetworkInterfaceAttribute",
      "ResetSnapshotAttribute",
      "RestoreAddressToClassic",
      "RevokeSecurityGroupEgress",
      "RevokeSecurityGroupIngress",
      "RunInstances",
      "RunScheduledInstances",
      "StartInstances",
      "StopInstances",
      "TerminateInstances",
      "UnassignIpv6Addresses",
      "UnassignPrivateIpAddresses",
      "UnmonitorInstances",
      "UpdateSecurityGroupRuleDescriptionsEgress",
      "UpdateSecurityGroupRuleDescriptionsIngress"
    ],
    "HasResource": "!0",
    "StringPrefix": "ec2",
    "conditionKeys": [
      "aws:RequestTag/tag-key",
      "aws:TagKeys",
      "ec2:AccepterVpc",
      "ec2:AuthorizedService",
      "ec2:AuthorizedUser",
      "ec2:AvailabilityZone",
      "ec2:CreateAction",
      "ec2:EbsOptimized",
      "ec2:Encrypted",
      "ec2:ImageType",
      "ec2:InstanceProfile",
      "ec2:InstanceType",
      "ec2:IsLaunchTemplateResource",
      "ec2:LaunchTemplate",
      "ec2:Owner",
      "ec2:ParentSnapshot",
      "ec2:ParentVolume",
      "ec2:Permission",
      "ec2:PlacementGroup",
      "ec2:PlacementGroupStrategy",
      "ec2:Public",
      "ec2:Region",
      "ec2:RequesterVpc",
      "ec2:ReservedInstancesOfferingType",
      "ec2:ResourceTag/",
      "ec2:ResourceTag/tag-key",
      "ec2:RootDeviceType",
      "ec2:SnapshotTime",
      "ec2:Subnet",
      "ec2:Tenancy",
      "ec2:VolumeIops",
      "ec2:VolumeSize",
      "ec2:VolumeType",
      "ec2:Vpc"
    ]
  },
  "Amazon EC2 Container Registry": {
    "ARNFormat": "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchCheckLayerAvailability",
      "BatchDeleteImage",
      "BatchGetImage",
      "CompleteLayerUpload",
      "CreateRepository",
      "DeleteRepository",
      "DeleteRepositoryPolicy",
      "DescribeImages",
      "DescribeRepositories",
      "GetAuthorizationToken",
      "GetDownloadUrlForLayer",
      "GetRepositoryPolicy",
      "InitiateLayerUpload",
      "ListImages",
      "PutImage",
      "SetRepositoryPolicy",
      "UploadLayerPart"
    ],
    "HasResource": "!0",
    "StringPrefix": "ecr"
  },
  "Amazon EC2 Container Service": {
    "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateCluster",
      "CreateService",
      "DeleteCluster",
      "DeleteService",
      "DeregisterContainerInstance",
      "DeregisterTaskDefinition",
      "DescribeClusters",
      "DescribeContainerInstances",
      "DescribeServices",
      "DescribeTaskDefinition",
      "DescribeTasks",
      "DiscoverPollEndpoint",
      "ListClusters",
      "ListContainerInstances",
      "ListServices",
      "ListTaskDefinitionFamilies",
      "ListTaskDefinitions",
      "ListTasks",
      "Poll",
      "RegisterContainerInstance",
      "RegisterTaskDefinition",
      "RunTask",
      "StartTask",
      "StartTelemetrySession",
      "StopTask",
      "SubmitContainerStateChange",
      "SubmitTaskStateChange",
      "UpdateContainerAgent",
      "UpdateContainerInstancesState",
      "UpdateService"
    ],
    "HasResource": "!0",
    "StringPrefix": "ecs",
    "conditionKeys": [
      "ecs:cluster",
      "ecs:container-instances"
    ]
  },
  "Amazon ElastiCache": {
    "Actions": [
      "AddTagsToResource",
      "AuthorizeCacheSecurityGroupIngress",
      "CopySnapshot",
      "CreateCacheCluster",
      "CreateCacheParameterGroup",
      "CreateCacheSecurityGroup",
      "CreateCacheSubnetGroup",
      "CreateReplicationGroup",
      "CreateSnapshot",
      "DeleteCacheCluster",
      "DeleteCacheParameterGroup",
      "DeleteCacheSecurityGroup",
      "DeleteCacheSubnetGroup",
      "DeleteReplicationGroup",
      "DeleteSnapshot",
      "DescribeCacheClusters",
      "DescribeCacheEngineVersions",
      "DescribeCacheParameterGroups",
      "DescribeCacheParameters",
      "DescribeCacheSecurityGroups",
      "DescribeCacheSubnetGroups",
      "DescribeEngineDefaultParameters",
      "DescribeEvents",
      "DescribeReplicationGroups",
      "DescribeReservedCacheNodes",
      "DescribeReservedCacheNodesOfferings",
      "DescribeSnapshots",
      "ListAllowedNodeTypeModifications",
      "ListTagsForResource",
      "ModifyCacheCluster",
      "ModifyCacheParameterGroup",
      "ModifyCacheSubnetGroup",
      "ModifyReplicationGroup",
      "PurchaseReservedCacheNodesOffering",
      "RebootCacheCluster",
      "RemoveTagsFromResource",
      "ResetCacheParameterGroup",
      "RevokeCacheSecurityGroupIngress"
    ],
    "HasResource": "!1",
    "StringPrefix": "elasticache"
  },
  "Amazon Elastic File System": {
    "ARNFormat": "arn:aws:elasticfilesystem:<region>:<account-id>:file-system/<file-system-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateFileSystem",
      "CreateMountTarget",
      "CreateTags",
      "DeleteFileSystem",
      "DeleteMountTarget",
      "DeleteTags",
      "DescribeFileSystems",
      "DescribeMountTargetSecurityGroups",
      "DescribeMountTargets",
      "DescribeTags",
      "ModifyMountTargetSecurityGroups"
    ],
    "HasResource": "!0",
    "StringPrefix": "elasticfilesystem"
  },
  "Amazon Elastic MapReduce": {
    "Actions": [
      "AddInstanceGroups",
      "AddJobFlowSteps",
      "AddTags",
      "CancelSteps",
      "CreateSecurityConfiguration",
      "DeleteSecurityConfiguration",
      "DescribeCluster",
      "DescribeJobFlows",
      "DescribeSecurityConfiguration",
      "DescribeStep",
      "ListBootstrapActions",
      "ListClusters",
      "ListInstanceGroups",
      "ListInstances",
      "ListSecurityConfigurations",
      "ListSteps",
      "ModifyInstanceGroups",
      "PutAutoScalingPolicy",
      "RemoveAutoScalingPolicy",
      "RemoveTags",
      "RunJobFlow",
      "SetTerminationProtection",
      "SetVisibleToAllUsers",
      "TerminateJobFlows",
      "ViewEventsFromAllClustersInConsole"
    ],
    "HasResource": "!1",
    "StringPrefix": "elasticmapreduce"
  },
  "Amazon Elastic Transcoder": {
    "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CancelJob",
      "CreateJob",
      "CreatePipeline",
      "CreatePreset",
      "DeletePipeline",
      "DeletePreset",
      "ListJobsByPipeline",
      "ListJobsByStatus",
      "ListPipelines",
      "ListPresets",
      "ReadJob",
      "ReadPipeline",
      "ReadPreset",
      "TestRole",
      "UpdatePipeline",
      "UpdatePipelineNotifications",
      "UpdatePipelineStatus"
    ],
    "HasResource": "!0",
    "StringPrefix": "elastictranscoder"
  },
  "Amazon Elasticsearch Service": {
    "ARNFormat": "arn:aws:es:<region>:<account_ID>:<resource>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "CreateElasticsearchDomain",
      "DeleteElasticsearchDomain",
      "DescribeElasticsearchDomain",
      "DescribeElasticsearchDomainConfig",
      "DescribeElasticsearchDomains",
      "ESHttpDelete",
      "ESHttpGet",
      "ESHttpHead",
      "ESHttpPost",
      "ESHttpPut",
      "ListDomainNames",
      "ListTags",
      "RemoveTags",
      "UpdateElasticsearchDomainConfig"
    ],
    "HasResource": "!0",
    "StringPrefix": "es"
  },
  "Amazon FreeRTOS": {
    "Actions": [
      "CreateSoftwareConfiguration",
      "DeleteSoftwareConfiguration",
      "DescribeHardwarePlatform",
      "DescribeSoftwareConfiguration",
      "GetSoftwareURL",
      "GetSoftwareURLForConfiguration",
      "ListFreeRTOSVersions",
      "ListHardwarePlatforms",
      "ListHardwareVendors",
      "ListSoftwareConfigurations",
      "UpdateSoftwareConfiguration"
    ],
    "HasResource": "!1",
    "StringPrefix": "freertos"
  },
  "Amazon GameLift": {
    "Actions": [
      "CreateAlias",
      "CreateBuild",
      "CreateFleet",
      "CreateGameSession",
      "CreatePlayerSession",
      "CreatePlayerSessions",
      "DeleteAlias",
      "DeleteBuild",
      "DeleteFleet",
      "DeleteScalingPolicy",
      "DescribeAlias",
      "DescribeBuild",
      "DescribeEC2InstanceLimits",
      "DescribeFleetAttributes",
      "DescribeFleetCapacity",
      "DescribeFleetEvents",
      "DescribeFleetPortSettings",
      "DescribeFleetUtilization",
      "DescribeGameSessionDetails",
      "DescribeGameSessions",
      "DescribeInstances",
      "DescribePlayerSessions",
      "DescribeRuntimeConfiguration",
      "DescribeScalingPolicies",
      "GetGameSessionLogUrl",
      "GetInstanceAccess",
      "ListAliases",
      "ListBuilds",
      "ListFleets",
      "PutScalingPolicy",
      "RequestUploadCredentials",
      "ResolveAlias",
      "SearchGameSessions",
      "UpdateAlias",
      "UpdateBuild",
      "UpdateFleetAttributes",
      "UpdateFleetCapacity",
      "UpdateFleetPortSettings",
      "UpdateGameSession",
      "UpdateRuntimeConfiguration"
    ],
    "HasResource": "!1",
    "StringPrefix": "gamelift"
  },
  "Amazon Glacier": {
    "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AbortMultipartUpload",
      "AbortVaultLock",
      "AddTagsToVault",
      "CompleteMultipartUpload",
      "CompleteVaultLock",
      "CreateVault",
      "DeleteArchive",
      "DeleteVault",
      "DeleteVaultAccessPolicy",
      "DeleteVaultNotifications",
      "DescribeJob",
      "DescribeVault",
      "GetDataRetrievalPolicy",
      "GetJobOutput",
      "GetVaultAccessPolicy",
      "GetVaultLock",
      "GetVaultNotifications",
      "InitiateJob",
      "InitiateMultipartUpload",
      "InitiateVaultLock",
      "ListJobs",
      "ListMultipartUploads",
      "ListParts",
      "ListProvisionedCapacity",
      "ListTagsForVault",
      "ListVaults",
      "PurchaseProvisionedCapacity",
      "RemoveTagsFromVault",
      "SetDataRetrievalPolicy",
      "SetVaultAccessPolicy",
      "SetVaultNotifications",
      "UploadArchive",
      "UploadMultipartPart"
    ],
    "HasResource": "!0",
    "StringPrefix": "glacier",
    "conditionKeys": [
      "glacier:ArchiveAgeInDays",
      "glacier:ResourceTag/"
    ]
  },
  "Amazon GuardDuty": {
    "ARNFormat": "arn:aws:guardduty:<region>:<account_ID>:.+",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AcceptInvitation",
      "ArchiveFindings",
      "CreateDetector",
      "CreateIPSet",
      "CreateMembers",
      "CreateSampleFindings",
      "CreateThreatIntelSet",
      "DeclineInvitations",
      "DeleteDetector",
      "DeleteIPSet",
      "DeleteInvitations",
      "DeleteMembers",
      "DeleteThreatIntelSet",
      "DisassociateFromMasterAccount",
      "DisassociateMembers",
      "GetDetector",
      "GetFindings",
      "GetFindingsStatistics",
      "GetIPSet",
      "GetInvitationsCount",
      "GetMasterAccount",
      "GetMembers",
      "GetThreatIntelSet",
      "InviteMembers",
      "ListDetectors",
      "ListFindings",
      "ListIPSets",
      "ListInvitations",
      "ListMembers",
      "ListThreatIntelSets",
      "StartMonitoringMembers",
      "StopMonitoringMembers",
      "UnarchiveFindings",
      "UpdateDetector",
      "UpdateFindingsFeedback",
      "UpdateIPSet",
      "UpdateThreatIntelSet"
    ],
    "HasResource": "!0",
    "StringPrefix": "guardduty"
  },
  "Amazon Inspector": {
    "Actions": [
      "AddAttributesToFindings",
      "CreateAssessmentTarget",
      "CreateAssessmentTemplate",
      "CreateResourceGroup",
      "DeleteAssessmentRun",
      "DeleteAssessmentTarget",
      "DeleteAssessmentTemplate",
      "DescribeAssessmentRuns",
      "DescribeAssessmentTargets",
      "DescribeAssessmentTemplates",
      "DescribeCrossAccountAccessRole",
      "DescribeFindings",
      "DescribeResourceGroups",
      "DescribeRulesPackages",
      "GetTelemetryMetadata",
      "ListAssessmentRunAgents",
      "ListAssessmentRuns",
      "ListAssessmentTargets",
      "ListAssessmentTemplates",
      "ListEventSubscriptions",
      "ListFindings",
      "ListRulesPackages",
      "ListTagsForResource",
      "PreviewAgents",
      "RegisterCrossAccountAccessRole",
      "RemoveAttributesFromFindings",
      "SetTagsForResource",
      "StartAssessmentRun",
      "StopAssessmentRun",
      "SubscribeToEvent",
      "UnsubscribeFromEvent",
      "UpdateAssessmentTarget"
    ],
    "HasResource": "!1",
    "StringPrefix": "inspector"
  },
  "Amazon Kinesis": {
    "ARNFormat": "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTagsToStream",
      "CreateStream",
      "DecreaseStreamRetentionPeriod",
      "DeleteStream",
      "DescribeLimits",
      "DescribeStream",
      "DisableEnhancedMonitoring",
      "EnableEnhancedMonitoring",
      "GetRecords",
      "GetShardIterator",
      "IncreaseStreamRetentionPeriod",
      "ListStreams",
      "ListTagsForStream",
      "MergeShards",
      "PutRecord",
      "PutRecords",
      "RemoveTagsFromStream",
      "SplitShard",
      "UpdateShardCount"
    ],
    "HasResource": "!0",
    "StringPrefix": "kinesis"
  },
  "Amazon Kinesis Analytics": {
    "ARNFormat": "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddApplicationInput",
      "AddApplicationOutput",
      "AddApplicationReferenceDataSource",
      "CreateApplication",
      "DeleteApplication",
      "DeleteApplicationOutput",
      "DeleteApplicationReferenceDataSource",
      "DescribeApplication",
      "DiscoverInputSchema",
      "ListApplications",
      "StartApplication",
      "StopApplication",
      "UpdateApplication"
    ],
    "HasResource": "!0",
    "StringPrefix": "kinesisanalytics"
  },
  "Amazon Kinesis Firehose": {
    "ARNFormat": "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateDeliveryStream",
      "DeleteDeliveryStream",
      "DescribeDeliveryStream",
      "ListDeliveryStreams",
      "PutRecord",
      "PutRecordBatch",
      "UpdateDestination"
    ],
    "HasResource": "!0",
    "StringPrefix": "firehose"
  },
  "Amazon Kinesis Video Streams": {
    "ARNFormat": "arn:aws:kinesisvideo:<region>:<account_ID>:<resourceType>/<resourceName>/<creationTime>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateStream",
      "DeleteStream",
      "DescribeStream",
      "GetDataEndpoint",
      "GetMedia",
      "GetMediaForFragmentList",
      "ListFragments",
      "ListStreams",
      "ListTagsForStream",
      "PutMedia",
      "TagStream",
      "UntagStream",
      "UpdateDataRetention",
      "UpdateStream"
    ],
    "HasResource": "!0",
    "StringPrefix": "kinesisvideo"
  },
  "Amazon Lex": {
    "ARNFormat": "arn:aws:lex:<region>:<account_ID>:<type>:<name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateBotVersion",
      "CreateIntentVersion",
      "CreateSlotTypeVersion",
      "DeleteBot",
      "DeleteBotAlias",
      "DeleteBotChannelAssociation",
      "DeleteBotVersion",
      "DeleteIntent",
      "DeleteIntentVersion",
      "DeleteSlotType",
      "DeleteSlotTypeVersion",
      "DeleteUtterances",
      "GetBot",
      "GetBotAlias",
      "GetBotAliases",
      "GetBotChannelAssociation",
      "GetBotChannelAssociations",
      "GetBotVersions",
      "GetBots",
      "GetBuiltinIntent",
      "GetBuiltinIntents",
      "GetBuiltinSlotTypes",
      "GetIntent",
      "GetIntentVersions",
      "GetIntents",
      "GetSlotType",
      "GetSlotTypeVersions",
      "GetSlotTypes",
      "GetUtterancesView",
      "PostContent",
      "PostText",
      "PutBot",
      "PutBotAlias",
      "PutIntent",
      "PutSlotType"
    ],
    "HasResource": "!0",
    "StringPrefix": "lex",
    "conditionKeys": [
      "lex:associatedIntents",
      "lex:associatedSlotTypes",
      "lex:channelType"
    ]
  },
  "Amazon Lightsail": {
    "ARNFormat": "arn:aws:lightsail:<regionName>:<userAccountId>:<resourceType>/<Id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AllocateStaticIp",
      "AttachStaticIp",
      "CloseInstancePublicPorts",
      "CreateDomain",
      "CreateDomainEntry",
      "CreateInstanceSnapshot",
      "CreateInstances",
      "CreateInstancesFromSnapshot",
      "CreateKeyPair",
      "DeleteDomain",
      "DeleteDomainEntry",
      "DeleteInstance",
      "DeleteInstanceSnapshot",
      "DeleteKeyPair",
      "DetachStaticIp",
      "DownloadDefaultKeyPair",
      "GetActiveNames",
      "GetBlueprints",
      "GetBundles",
      "GetDomain",
      "GetDomains",
      "GetInstance",
      "GetInstanceAccessDetails",
      "GetInstanceMetricData",
      "GetInstancePortStates",
      "GetInstanceSnapshot",
      "GetInstanceSnapshots",
      "GetInstanceState",
      "GetInstances",
      "GetKeyPair",
      "GetKeyPairs",
      "GetOperation",
      "GetOperations",
      "GetOperationsForResource",
      "GetRegions",
      "GetStaticIp",
      "GetStaticIps",
      "ImportKeyPair",
      "IsVpcPeered",
      "OpenInstancePublicPorts",
      "PeerVpc",
      "RebootInstance",
      "ReleaseStaticIp",
      "StartInstance",
      "StopInstance",
      "UnpeerVpc",
      "UpdateDomainEntry"
    ],
    "HasResource": "!0",
    "StringPrefix": "lightsail"
  },
  "Amazon MQ": {
    "ARNFormat": "arn:aws:mq:<region>:<account>:.+",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateBroker",
      "CreateConfiguration",
      "CreateUser",
      "DeleteBroker",
      "DeleteUser",
      "DescribeBroker",
      "DescribeConfiguration",
      "DescribeConfigurationRevision",
      "DescribeUser",
      "ListBrokers",
      "ListConfigurationRevisions",
      "ListConfigurations",
      "ListUsers",
      "RebootBroker",
      "UpdateBroker",
      "UpdateConfiguration",
      "UpdateUser"
    ],
    "HasResource": "!0",
    "StringPrefix": "mq"
  },
  "Amazon Machine Learning": {
    "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "CreateBatchPrediction",
      "CreateDataSourceFromRDS",
      "CreateDataSourceFromRedshift",
      "CreateDataSourceFromS3",
      "CreateEvaluation",
      "CreateMLModel",
      "CreateRealtimeEndpoint",
      "DeleteBatchPrediction",
      "DeleteDataSource",
      "DeleteEvaluation",
      "DeleteMLModel",
      "DeleteRealtimeEndpoint",
      "DeleteTags",
      "DescribeBatchPredictions",
      "DescribeDataSources",
      "DescribeEvaluations",
      "DescribeMLModels",
      "DescribeTags",
      "GetBatchPrediction",
      "GetDataSource",
      "GetEvaluation",
      "GetMLModel",
      "Predict",
      "UpdateBatchPrediction",
      "UpdateDataSource",
      "UpdateEvaluation",
      "UpdateMLModel"
    ],
    "HasResource": "!0",
    "StringPrefix": "machinelearning"
  },
  "Amazon Mechanical Turk": {
    "Actions": [
      "ApproveAssignment",
      "ApproveRejectedAssignment",
      "AssignQualification",
      "BlockWorker",
      "ChangeHITTypeOfHIT",
      "CreateHIT",
      "CreateQualificationType",
      "DisableHIT",
      "DisposeHIT",
      "DisposeQualificationType",
      "ExtendHIT",
      "ForceExpireHIT",
      "GetAccountBalance",
      "GetAssignment",
      "GetAssignmentsForHIT",
      "GetBlockedWorkers",
      "GetBonusPayments",
      "GetFileUploadURL",
      "GetHIT",
      "GetHITsForQualificationType",
      "GetQualificationRequests",
      "GetQualificationScore",
      "GetQualificationType",
      "GetQualificationsForQualificationType",
      "GetRequesterStatistic",
      "GetRequesterWorkerStatistic",
      "GetReviewResultsForHIT",
      "GetReviewableHITs",
      "GrantBonus",
      "GrantQualification",
      "NotifyWorkers",
      "RegisterHITType",
      "RejectAssignment",
      "RejectQualificationRequest",
      "RevokeQualification",
      "SearchHITs",
      "SearchQualificationTypes",
      "SendTestEventNotification",
      "SetHITAsReviewing",
      "SetHITTypeNotification",
      "UnblockWorker",
      "UpdateQualificationScore",
      "UpdateQualificationType"
    ],
    "HasResource": "!1",
    "StringPrefix": "mechanicalturk"
  },
  "Amazon Mechanical Turk Crowd": {
    "ARNFormat": "arn:aws:crowd:${region}:${account}:${resourceType}/${resourcePath}",
    "ARNRegex": "REMOVED",
    "Actions": [
      "GetTask",
      "PutTask"
    ],
    "HasResource": "!0",
    "StringPrefix": "crowd"
  },
  "Amazon Message Delivery Service": {
    "Actions": [
      "AcknowledgeMessage",
      "DeleteMessage",
      "FailMessage",
      "GetEndpoint",
      "GetMessages",
      "SendReply"
    ],
    "HasResource": "!1",
    "StringPrefix": "ec2messages"
  },
  "Amazon Mobile Analytics": {
    "Actions": [
      "GetFinancialReports",
      "GetReports",
      "PutEvents"
    ],
    "HasResource": "!1",
    "StringPrefix": "mobileanalytics"
  },
  "Amazon Pinpoint": {
    "ARNFormat": "arn:aws:mobiletargeting:<region>:<account_ID>:.+",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateCampaign",
      "CreateImportJob",
      "CreateSegment",
      "DeleteApnsChannel",
      "DeleteCampaign",
      "DeleteGcmChannel",
      "DeleteSegment",
      "GetApnsChannel",
      "GetApplicationSettings",
      "GetCampaign",
      "GetCampaignActivities",
      "GetCampaignVersion",
      "GetCampaignVersions",
      "GetCampaigns",
      "GetEndpoint",
      "GetGcmChannel",
      "GetImportJob",
      "GetImportJobs",
      "GetReports",
      "GetSegment",
      "GetSegmentImportJobs",
      "GetSegmentVersion",
      "GetSegmentVersions",
      "GetSegments",
      "UpdateApnsChannel",
      "UpdateApplicationSettings",
      "UpdateCampaign",
      "UpdateEndpoint",
      "UpdateEndpointsBatch",
      "UpdateGcmChannel",
      "UpdateSegment"
    ],
    "HasResource": "!0",
    "StringPrefix": "mobiletargeting"
  },
  "Amazon Polly": {
    "ARNFormat": "arn:aws:polly:<region>:<accountID>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DeleteLexicon",
      "DescribeVoices",
      "GetLexicon",
      "ListLexicons",
      "PutLexicon",
      "SynthesizeSpeech"
    ],
    "HasResource": "!0",
    "StringPrefix": "polly"
  },
  "Amazon RDS": {
    "ARNFormat": "arn:aws:rds:<region>:<accountID>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddRoleToDBCluster",
      "AddSourceIdentifierToSubscription",
      "AddTagsToResource",
      "ApplyPendingMaintenanceAction",
      "AuthorizeDBSecurityGroupIngress",
      "CopyDBClusterSnapshot",
      "CopyDBParameterGroup",
      "CopyDBSnapshot",
      "CopyOptionGroup",
      "CreateDBCluster",
      "CreateDBClusterParameterGroup",
      "CreateDBClusterSnapshot",
      "CreateDBInstance",
      "CreateDBInstanceReadReplica",
      "CreateDBParameterGroup",
      "CreateDBSecurityGroup",
      "CreateDBSnapshot",
      "CreateDBSubnetGroup",
      "CreateEventSubscription",
      "CreateOptionGroup",
      "DeleteDBCluster",
      "DeleteDBClusterParameterGroup",
      "DeleteDBClusterSnapshot",
      "DeleteDBInstance",
      "DeleteDBParameterGroup",
      "DeleteDBSecurityGroup",
      "DeleteDBSnapshot",
      "DeleteDBSubnetGroup",
      "DeleteEventSubscription",
      "DeleteOptionGroup",
      "DescribeAccountAttributes",
      "DescribeCertificates",
      "DescribeDBClusterParameterGroups",
      "DescribeDBClusterParameters",
      "DescribeDBClusterSnapshotAttributes",
      "DescribeDBClusterSnapshots",
      "DescribeDBClusters",
      "DescribeDBEngineVersions",
      "DescribeDBInstances",
      "DescribeDBLogFiles",
      "DescribeDBParameterGroups",
      "DescribeDBParameters",
      "DescribeDBSecurityGroups",
      "DescribeDBSnapshotAttributes",
      "DescribeDBSnapshots",
      "DescribeDBSubnetGroups",
      "DescribeEngineDefaultClusterParameters",
      "DescribeEngineDefaultParameters",
      "DescribeEventCategories",
      "DescribeEventSubscriptions",
      "DescribeEvents",
      "DescribeOptionGroupOptions",
      "DescribeOptionGroups",
      "DescribeOrderableDBInstanceOptions",
      "DescribePendingMaintenanceActions",
      "DescribeReservedDBInstances",
      "DescribeReservedDBInstancesOfferings",
      "DownloadCompleteDBLogFile",
      "DownloadDBLogFilePortion",
      "FailoverDBCluster",
      "ListTagsForResource",
      "ModifyDBCluster",
      "ModifyDBClusterParameterGroup",
      "ModifyDBClusterSnapshotAttribute",
      "ModifyDBInstance",
      "ModifyDBParameterGroup",
      "ModifyDBSnapshotAttribute",
      "ModifyDBSubnetGroup",
      "ModifyEventSubscription",
      "ModifyOptionGroup",
      "PromoteReadReplica",
      "PurchaseReservedDBInstancesOffering",
      "RebootDBInstance",
      "RemoveSourceIdentifierFromSubscription",
      "RemoveTagsFromResource",
      "ResetDBClusterParameterGroup",
      "ResetDBParameterGroup",
      "RestoreDBClusterFromSnapshot",
      "RestoreDBClusterToPointInTime",
      "RestoreDBInstanceFromDBSnapshot",
      "RestoreDBInstanceToPointInTime",
      "RevokeDBSecurityGroupIngress",
      "StartDBInstance",
      "StopDBInstance"
    ],
    "HasResource": "!0",
    "StringPrefix": "rds",
    "conditionKeys": [
      "Piops",
      "rds:DatabaseClass",
      "rds:DatabaseEngine",
      "rds:DatabaseName",
      "rds:MultiAz",
      "rds:Piops",
      "rds:StorageSize",
      "rds:Vpc",
      "rds:cluster-pg-tag",
      "rds:cluster-snapshot-tag",
      "rds:cluster-tag",
      "rds:db-tag",
      "rds:es-tag",
      "rds:og-tag",
      "rds:pg-tag",
      "rds:ri-tag",
      "rds:secgrp-tag",
      "rds:snapshot-tag",
      "rds:subgrp-tag"
    ]
  },
  "Amazon Redshift": {
    "ARNFormat": "arn:aws:redshift:<region>:<accountID>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AuthorizeClusterSecurityGroupIngress",
      "AuthorizeSnapshotAccess",
      "CancelQuerySession",
      "CopyClusterSnapshot",
      "CreateCluster",
      "CreateClusterParameterGroup",
      "CreateClusterSecurityGroup",
      "CreateClusterSnapshot",
      "CreateClusterSubnetGroup",
      "CreateClusterUser",
      "CreateEventSubscription",
      "CreateHsmClientCertificate",
      "CreateHsmConfiguration",
      "CreateSnapshotCopyGrant",
      "CreateTags",
      "DeleteCluster",
      "DeleteClusterParameterGroup",
      "DeleteClusterSecurityGroup",
      "DeleteClusterSnapshot",
      "DeleteClusterSubnetGroup",
      "DeleteEventSubscription",
      "DeleteHsmClientCertificate",
      "DeleteHsmConfiguration",
      "DeleteSnapshotCopyGrant",
      "DeleteTags",
      "DescribeClusterParameterGroups",
      "DescribeClusterParameters",
      "DescribeClusterSecurityGroups",
      "DescribeClusterSnapshots",
      "DescribeClusterSubnetGroups",
      "DescribeClusterVersions",
      "DescribeClusters",
      "DescribeDefaultClusterParameters",
      "DescribeEventCategories",
      "DescribeEventSubscriptions",
      "DescribeEvents",
      "DescribeHsmClientCertificates",
      "DescribeHsmConfigurations",
      "DescribeLoggingStatus",
      "DescribeOrderableClusterOptions",
      "DescribeReservedNodeOfferings",
      "DescribeReservedNodes",
      "DescribeResize",
      "DescribeSnapshotCopyGrants",
      "DescribeTableRestoreStatus",
      "DescribeTags",
      "DisableLogging",
      "DisableSnapshotCopy",
      "EnableLogging",
      "EnableSnapshotCopy",
      "GetClusterCredentials",
      "JoinGroup",
      "ModifyCluster",
      "ModifyClusterIamRoles",
      "ModifyClusterParameterGroup",
      "ModifyClusterSubnetGroup",
      "ModifyEventSubscription",
      "ModifySnapshotCopyRetentionPeriod",
      "PurchaseReservedNodeOffering",
      "RebootCluster",
      "ResetClusterParameterGroup",
      "RestoreFromClusterSnapshot",
      "RestoreTableFromClusterSnapshot",
      "RevokeClusterSecurityGroupIngress",
      "RevokeSnapshotAccess",
      "RotateEncryptionKey",
      "ViewQueriesInConsole"
    ],
    "HasResource": "!0",
    "StringPrefix": "redshift",
    "conditionKeys": [
      "redshift:DbName",
      "redshift:DbUser",
      "redshift:DurationSeconds"
    ]
  },
  "Amazon Rekognition": {
    "ARNFormat": "arn:aws:rekognition:<region>:<accountID>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CompareFaces",
      "CreateCollection",
      "CreateStreamProcessor",
      "DeleteCollection",
      "DeleteFaces",
      "DeleteStreamProcessor",
      "DescribeStreamProcessor",
      "DetectFaces",
      "DetectLabels",
      "DetectModerationLabels",
      "DetectText",
      "GetCelebrityInfo",
      "GetCelebrityRecognition",
      "GetContentModeration",
      "GetFaceDetection",
      "GetFaceSearch",
      "GetLabelDetection",
      "GetPersonTracking",
      "IndexFaces",
      "ListCollections",
      "ListFaces",
      "ListStreamProcessors",
      "RecognizeCelebrities",
      "SearchFaces",
      "SearchFacesByImage",
      "StartCelebrityRecognition",
      "StartContentModeration",
      "StartFaceDetection",
      "StartFaceSearch",
      "StartLabelDetection",
      "StartPersonTracking",
      "StartStreamProcessor",
      "StopStreamProcessor"
    ],
    "HasResource": "!0",
    "StringPrefix": "rekognition"
  },
  "Amazon Resource Group Tagging API": {
    "Actions": [
      "GetResources",
      "GetTagKeys",
      "GetTagValues",
      "TagResources",
      "UntagResources"
    ],
    "HasResource": "!1",
    "StringPrefix": "tag"
  },
  "Amazon Route 53": {
    "ARNFormat": "arn:aws:route53:::<resource>/<id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateVPCWithHostedZone",
      "ChangeResourceRecordSets",
      "ChangeTagsForResource",
      "CreateHealthCheck",
      "CreateHostedZone",
      "CreateReusableDelegationSet",
      "CreateTrafficPolicy",
      "CreateTrafficPolicyInstance",
      "CreateTrafficPolicyVersion",
      "DeleteHealthCheck",
      "DeleteHostedZone",
      "DeleteReusableDelegationSet",
      "DeleteTrafficPolicy",
      "DeleteTrafficPolicyInstance",
      "DisableDomainAutoRenew",
      "DisassociateVPCFromHostedZone",
      "EnableDomainAutoRenew",
      "GetChange",
      "GetCheckerIpRanges",
      "GetGeoLocation",
      "GetHealthCheck",
      "GetHealthCheckCount",
      "GetHealthCheckLastFailureReason",
      "GetHealthCheckStatus",
      "GetHostedZone",
      "GetHostedZoneCount",
      "GetReusableDelegationSet",
      "GetTrafficPolicy",
      "GetTrafficPolicyInstance",
      "GetTrafficPolicyInstanceCount",
      "ListGeoLocations",
      "ListHealthChecks",
      "ListHostedZones",
      "ListHostedZonesByName",
      "ListResourceRecordSets",
      "ListReusableDelegationSets",
      "ListTagsForResource",
      "ListTagsForResources",
      "ListTrafficPolicies",
      "ListTrafficPolicyInstances",
      "ListTrafficPolicyInstancesByHostedZone",
      "ListTrafficPolicyInstancesByPolicy",
      "ListTrafficPolicyVersions",
      "TestDNSAnswer",
      "UpdateHealthCheck",
      "UpdateHostedZoneComment",
      "UpdateTrafficPolicyComment",
      "UpdateTrafficPolicyInstance"
    ],
    "HasResource": "!0",
    "StringPrefix": "route53"
  },
  "Amazon Route 53 Auto Naming": {
    "ARNFormat": "arn:aws:servicediscovery:<region>:<account-id>:<resource-type>/<resource_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreatePrivateDnsNamespace",
      "CreatePublicDnsNamespace",
      "CreateService",
      "DeleteNamespace",
      "DeleteService",
      "DeregisterInstance",
      "GetInstance",
      "GetInstancesHealthStatus",
      "GetNamespace",
      "GetOperation",
      "GetService",
      "ListInstances",
      "ListNamespaces",
      "ListOperations",
      "ListServices",
      "RegisterInstance",
      "UpdateInstanceHeartbeatStatus",
      "UpdateService"
    ],
    "HasResource": "!0",
    "StringPrefix": "servicediscovery"
  },
  "Amazon Route53 Domains": {
    "Actions": [
      "CheckDomainAvailability",
      "DeleteTagsForDomain",
      "DisableDomainAutoRenew",
      "DisableDomainTransferLock",
      "EnableDomainAutoRenew",
      "EnableDomainTransferLock",
      "GetContactReachabilityStatus",
      "GetDomainDetail",
      "GetDomainSuggestions",
      "GetOperationDetail",
      "ListDomains",
      "ListOperations",
      "ListTagsForDomain",
      "RegisterDomain",
      "RenewDomain",
      "ResendContactReachabilityEmail",
      "RetrieveDomainAuthCode",
      "TransferDomain",
      "UpdateDomainContact",
      "UpdateDomainContactPrivacy",
      "UpdateDomainNameservers",
      "UpdateTagsForDomain",
      "ViewBilling"
    ],
    "HasResource": "!1",
    "StringPrefix": "route53domains"
  },
  "Amazon S3": {
    "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AbortMultipartUpload",
      "CreateBucket",
      "DeleteBucket",
      "DeleteBucketPolicy",
      "DeleteBucketWebsite",
      "DeleteObject",
      "DeleteObjectTagging",
      "DeleteObjectVersion",
      "DeleteObjectVersionTagging",
      "GetAccelerateConfiguration",
      "GetAnalyticsConfiguration",
      "GetBucketAcl",
      "GetBucketCORS",
      "GetBucketLocation",
      "GetBucketLogging",
      "GetBucketNotification",
      "GetBucketPolicy",
      "GetBucketRequestPayment",
      "GetBucketTagging",
      "GetBucketVersioning",
      "GetBucketWebsite",
      "GetInventoryConfiguration",
      "GetIpConfiguration",
      "GetLifecycleConfiguration",
      "GetMetricsConfiguration",
      "GetObject",
      "GetObjectAcl",
      "GetObjectTagging",
      "GetObjectTorrent",
      "GetObjectVersion",
      "GetObjectVersionAcl",
      "GetObjectVersionForReplication",
      "GetObjectVersionTagging",
      "GetObjectVersionTorrent",
      "GetReplicationConfiguration",
      "HeadBucket",
      "ListAllMyBuckets",
      "ListBucket",
      "ListBucketByTags",
      "ListBucketMultipartUploads",
      "ListBucketVersions",
      "ListMultipartUploadParts",
      "ListObjects",
      "ObjectOwnerOverrideToBucketOwner",
      "PutAccelerateConfiguration",
      "PutAnalyticsConfiguration",
      "PutBucketAcl",
      "PutBucketCORS",
      "PutBucketLogging",
      "PutBucketNotification",
      "PutBucketPolicy",
      "PutBucketRequestPayment",
      "PutBucketTagging",
      "PutBucketVersioning",
      "PutBucketWebsite",
      "PutInventoryConfiguration",
      "PutIpConfiguration",
      "PutLifecycleConfiguration",
      "PutMetricsConfiguration",
      "PutObject",
      "PutObjectAcl",
      "PutObjectTagging",
      "PutObjectVersionAcl",
      "PutObjectVersionTagging",
      "PutReplicationConfiguration",
      "ReplicateDelete",
      "ReplicateObject",
      "ReplicateTags",
      "RestoreObject"
    ],
    "HasResource": "!0",
    "StringPrefix": "s3",
    "conditionKeys": [
      "s3:ExistingObjectTag/<key>",
      "s3:LocationConstraint",
      "s3:RequestObjectTag/<key>",
      "s3:RequestObjectTagKeys",
      "s3:VersionId",
      "s3:authtype",
      "s3:delimiter",
      "s3:locationconstraint",
      "s3:max-keys",
      "s3:prefix",
      "s3:signatureage",
      "s3:signatureversion",
      "s3:versionid",
      "s3:x-amz-acl",
      "s3:x-amz-content-sha256",
      "s3:x-amz-copy-source",
      "s3:x-amz-grant-full-control",
      "s3:x-amz-grant-read",
      "s3:x-amz-grant-read-acp",
      "s3:x-amz-grant-write",
      "s3:x-amz-grant-write-acp",
      "s3:x-amz-metadata-directive",
      "s3:x-amz-server-side-encryption",
      "s3:x-amz-server-side-encryption-aws-kms-key-id",
      "s3:x-amz-storage-class",
      "s3:x-amz-website-redirect-location"
    ]
  },
  "Amazon SES": {
    "Actions": [
      "CloneReceiptRuleSet",
      "CreateConfigurationSet",
      "CreateConfigurationSetEventDestination",
      "CreateConfigurationSetTrackingOptions",
      "CreateCustomVerificationEmailTemplate",
      "CreateReceiptFilter",
      "CreateReceiptRule",
      "CreateReceiptRuleSet",
      "CreateTemplate",
      "DeleteConfigurationSet",
      "DeleteConfigurationSetEventDestination",
      "DeleteConfigurationSetTrackingOptions",
      "DeleteCustomVerificationEmailTemplate",
      "DeleteIdentity",
      "DeleteIdentityPolicy",
      "DeleteReceiptFilter",
      "DeleteReceiptRule",
      "DeleteReceiptRuleSet",
      "DeleteTemplate",
      "DeleteVerifiedEmailAddress",
      "DescribeActiveReceiptRuleSet",
      "DescribeConfigurationSet",
      "DescribeReceiptRule",
      "DescribeReceiptRuleSet",
      "GetAccountSendingEnabled",
      "GetCustomVerificationEmailTemplate",
      "GetIdentityDkimAttributes",
      "GetIdentityMailFromDomainAttributes",
      "GetIdentityNotificationAttributes",
      "GetIdentityPolicies",
      "GetIdentityVerificationAttributes",
      "GetSendQuota",
      "GetSendStatistics",
      "GetTemplate",
      "ListConfigurationSets",
      "ListCustomVerificationEmailTemplates",
      "ListIdentities",
      "ListIdentityPolicies",
      "ListReceiptFilters",
      "ListReceiptRuleSets",
      "ListTemplates",
      "ListVerifiedEmailAddresses",
      "PutIdentityPolicy",
      "ReorderReceiptRuleSet",
      "SendBounce",
      "SendBulkTemplatedEmail",
      "SendCustomVerificationEmail",
      "SendEmail",
      "SendRawEmail",
      "SendTemplatedEmail",
      "SetActiveReceiptRuleSet",
      "SetIdentityDkimEnabled",
      "SetIdentityFeedbackForwardingEnabled",
      "SetIdentityHeadersInNotificationsEnabled",
      "SetIdentityMailFromDomain",
      "SetIdentityNotificationTopic",
      "SetReceiptRulePosition",
      "TestRenderTemplate",
      "UpdateAccountSendingEnabled",
      "UpdateConfigurationSetEventDestination",
      "UpdateConfigurationSetReputationMetricsEnabled",
      "UpdateConfigurationSetSendingEnabled",
      "UpdateConfigurationSetTrackingOptions",
      "UpdateCustomVerificationEmailTemplate",
      "UpdateReceiptRule",
      "UpdateTemplate",
      "VerifyDomainDkim",
      "VerifyDomainIdentity",
      "VerifyEmailAddress",
      "VerifyEmailIdentity"
    ],
    "HasResource": "!1",
    "StringPrefix": "ses",
    "conditionKeys": [
      "ses:FeedbackAddress",
      "ses:FromAddress",
      "ses:FromDisplayName",
      "ses:Recipients"
    ]
  },
  "Amazon SNS": {
    "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddPermission",
      "CheckIfPhoneNumberIsOptedOut",
      "ConfirmSubscription",
      "CreatePlatformApplication",
      "CreatePlatformEndpoint",
      "CreateTopic",
      "DeleteEndpoint",
      "DeletePlatformApplication",
      "DeleteTopic",
      "GetEndpointAttributes",
      "GetPlatformApplicationAttributes",
      "GetSMSAttributes",
      "GetSubscriptionAttributes",
      "GetTopicAttributes",
      "ListEndpointsByPlatformApplication",
      "ListPhoneNumbersOptedOut",
      "ListPlatformApplications",
      "ListSubscriptions",
      "ListSubscriptionsByTopic",
      "ListTopics",
      "OptInPhoneNumber",
      "Publish",
      "RemovePermission",
      "SetEndpointAttributes",
      "SetPlatformApplicationAttributes",
      "SetSMSAttributes",
      "SetSubscriptionAttributes",
      "SetTopicAttributes",
      "Subscribe",
      "Unsubscribe"
    ],
    "HasResource": "!0",
    "StringPrefix": "sns",
    "conditionKeys": [
      "sns:Endpoint",
      "sns:Protocol"
    ]
  },
  "Amazon SQS": {
    "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddPermission",
      "ChangeMessageVisibility",
      "ChangeMessageVisibilityBatch",
      "CreateQueue",
      "DeleteMessage",
      "DeleteMessageBatch",
      "DeleteQueue",
      "GetQueueAttributes",
      "GetQueueUrl",
      "ListDeadLetterSourceQueues",
      "ListQueueTags",
      "ListQueues",
      "PurgeQueue",
      "ReceiveMessage",
      "RemovePermission",
      "SendMessage",
      "SendMessageBatch",
      "SetQueueAttributes",
      "TagQueue",
      "UntagQueue"
    ],
    "HasResource": "!0",
    "StringPrefix": "sqs"
  },
  "Amazon SageMaker": {
    "ARNFormat": "arn:aws:sagemaker:<region>:<account-id>:<resource-type>/<resource_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "CreateEndpoint",
      "CreateEndpointConfig",
      "CreateModel",
      "CreateNotebookInstance",
      "CreatePresignedNotebookInstanceUrl",
      "CreateTrainingJob",
      "DeleteEndpoint",
      "DeleteEndpointConfig",
      "DeleteModel",
      "DeleteNotebookInstance",
      "DeleteTags",
      "DescribeEndpoint",
      "DescribeEndpointConfig",
      "DescribeModel",
      "DescribeNotebookInstance",
      "DescribeTrainingJob",
      "InvokeEndpoint",
      "ListEndpointConfigs",
      "ListEndpoints",
      "ListModels",
      "ListNotebookInstances",
      "ListTags",
      "ListTrainingJobs",
      "StartNotebookInstance",
      "StopNotebookInstance",
      "StopTrainingJob",
      "UpdateEndpoint",
      "UpdateEndpointWeightsAndCapacities",
      "UpdateNotebookInstance"
    ],
    "HasResource": "!0",
    "StringPrefix": "sagemaker"
  },
  "Amazon Simple Systems Manager": {
    "ARNFormat": "arn:aws:ssm:<region>:<account_ID>:<document_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTagsToResource",
      "CancelCommand",
      "CreateActivation",
      "CreateAssociation",
      "CreateAssociationBatch",
      "CreateDocument",
      "CreateMaintenanceWindow",
      "CreatePatchBaseline",
      "CreateResourceDataSync",
      "DeleteActivation",
      "DeleteAssociation",
      "DeleteDocument",
      "DeleteMaintenanceWindow",
      "DeleteParameter",
      "DeleteParameters",
      "DeletePatchBaseline",
      "DeleteResourceDataSync",
      "DeregisterManagedInstance",
      "DeregisterPatchBaselineForPatchGroup",
      "DeregisterTargetFromMaintenanceWindow",
      "DeregisterTaskFromMaintenanceWindow",
      "DescribeActivations",
      "DescribeAssociation",
      "DescribeAutomationExecutions",
      "DescribeAutomationStepExecutions",
      "DescribeAvailablePatches",
      "DescribeDocument",
      "DescribeDocumentParameters",
      "DescribeDocumentPermission",
      "DescribeEffectiveInstanceAssociations",
      "DescribeEffectivePatchesForPatchBaseline",
      "DescribeInstanceAssociationsStatus",
      "DescribeInstanceInformation",
      "DescribeInstancePatchStates",
      "DescribeInstancePatchStatesForPatchGroup",
      "DescribeInstancePatches",
      "DescribeInstanceProperties",
      "DescribeMaintenanceWindowExecutionTaskInvocations",
      "DescribeMaintenanceWindowExecutionTasks",
      "DescribeMaintenanceWindowExecutions",
      "DescribeMaintenanceWindowTargets",
      "DescribeMaintenanceWindowTasks",
      "DescribeMaintenanceWindows",
      "DescribeParameters",
      "DescribePatchBaselines",
      "DescribePatchGroupState",
      "DescribePatchGroups",
      "GetAutomationExecution",
      "GetCommandInvocation",
      "GetDefaultPatchBaseline",
      "GetDeployablePatchSnapshotForInstance",
      "GetDocument",
      "GetInventory",
      "GetInventorySchema",
      "GetMaintenanceWindow",
      "GetMaintenanceWindowExecution",
      "GetMaintenanceWindowExecutionTask",
      "GetMaintenanceWindowExecutionTaskInvocation",
      "GetMaintenanceWindowTask",
      "GetManifest",
      "GetParameter",
      "GetParameterHistory",
      "GetParameters",
      "GetParametersByPath",
      "GetPatchBaseline",
      "GetPatchBaselineForPatchGroup",
      "ListAssociationVersions",
      "ListAssociations",
      "ListCommandInvocations",
      "ListCommands",
      "ListDocumentVersions",
      "ListDocuments",
      "ListInstanceAssociations",
      "ListInventoryEntries",
      "ListResourceDataSync",
      "ListTagsForResource",
      "ModifyDocumentPermission",
      "PutComplianceItems",
      "PutConfigurePackageResult",
      "PutInventory",
      "PutParameter",
      "RegisterDefaultPatchBaseline",
      "RegisterPatchBaselineForPatchGroup",
      "RegisterTargetWithMaintenanceWindow",
      "RegisterTaskWithMaintenanceWindow",
      "RemoveTagsFromResource",
      "SendAutomationSignal",
      "SendCommand",
      "StartAssociationsOnce",
      "StartAutomationExecution",
      "StopAutomationExecution",
      "UpdateAssociation",
      "UpdateAssociationStatus",
      "UpdateDocument",
      "UpdateDocumentDefaultVersion",
      "UpdateInstanceAssociationStatus",
      "UpdateInstanceInformation",
      "UpdateMaintenanceWindow",
      "UpdateMaintenanceWindowTarget",
      "UpdateMaintenanceWindowTask",
      "UpdateManagedInstanceRole",
      "UpdatePatchBaseline"
    ],
    "HasResource": "!0",
    "StringPrefix": "ssm"
  },
  "Amazon Simple Workflow Service": {
    "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CancelTimer",
      "CancelWorkflowExecution",
      "CompleteWorkflowExecution",
      "ContinueAsNewWorkflowExecution",
      "CountClosedWorkflowExecutions",
      "CountOpenWorkflowExecutions",
      "CountPendingActivityTasks",
      "CountPendingDecisionTasks",
      "DeprecateActivityType",
      "DeprecateDomain",
      "DeprecateWorkflowType",
      "DescribeActivityType",
      "DescribeDomain",
      "DescribeWorkflowExecution",
      "DescribeWorkflowType",
      "FailWorkflowExecution",
      "GetWorkflowExecutionHistory",
      "ListActivityTypes",
      "ListClosedWorkflowExecutions",
      "ListDomains",
      "ListOpenWorkflowExecutions",
      "ListWorkflowTypes",
      "PollForActivityTask",
      "PollForDecisionTask",
      "RecordActivityTaskHeartbeat",
      "RecordMarker",
      "RegisterActivityType",
      "RegisterDomain",
      "RegisterWorkflowType",
      "RequestCancelActivityTask",
      "RequestCancelExternalWorkflowExecution",
      "RequestCancelWorkflowExecution",
      "RespondActivityTaskCanceled",
      "RespondActivityTaskCompleted",
      "RespondActivityTaskFailed",
      "RespondDecisionTaskCompleted",
      "ScheduleActivityTask",
      "SignalExternalWorkflowExecution",
      "SignalWorkflowExecution",
      "StartChildWorkflowExecution",
      "StartTimer",
      "StartWorkflowExecution",
      "TerminateWorkflowExecution"
    ],
    "HasResource": "!0",
    "StringPrefix": "swf",
    "conditionKeys": [
      " swf:workflowType.name",
      "swf:activityType.name",
      "swf:activityType.version",
      "swf:defaultTaskList.name",
      "swf:name",
      "swf:tagFilter.tag",
      "swf:tagList.member.0",
      "swf:tagList.member.1",
      "swf:tagList.member.2",
      "swf:tagList.member.3",
      "swf:tagList.member.4",
      "swf:taskList.name",
      "swf:typeFilter.name",
      "swf:typeFilter.version",
      "swf:version",
      "swf:workflowType.name",
      "swf:workflowType.version"
    ]
  },
  "Amazon SimpleDB": {
    "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "BatchDeleteAttributes",
      "BatchPutAttributes",
      "CreateDomain",
      "DeleteAttributes",
      "DeleteDomain",
      "DomainMetadata",
      "GetAttributes",
      "ListDomains",
      "PutAttributes",
      "Select"
    ],
    "HasResource": "!0",
    "StringPrefix": "sdb"
  },
  "Amazon Storage Gateway": {
    "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "ActivateGateway",
      "AddCache",
      "AddTagsToResource",
      "AddUploadBuffer",
      "AddWorkingStorage",
      "CancelArchival",
      "CancelRetrieval",
      "CreateCachediSCSIVolume",
      "CreateNFSFileShare",
      "CreateSnapshot",
      "CreateSnapshotFromVolumeRecoveryPoint",
      "CreateStorediSCSIVolume",
      "CreateTapeWithBarcode",
      "CreateTapes",
      "DeleteBandwidthRateLimit",
      "DeleteChapCredentials",
      "DeleteFileShare",
      "DeleteGateway",
      "DeleteSnapshotSchedule",
      "DeleteTape",
      "DeleteTapeArchive",
      "DeleteVolume",
      "DescribeBandwidthRateLimit",
      "DescribeCache",
      "DescribeCachediSCSIVolumes",
      "DescribeChapCredentials",
      "DescribeGatewayInformation",
      "DescribeMaintenanceStartTime",
      "DescribeNFSFileShares",
      "DescribeSnapshotSchedule",
      "DescribeStorediSCSIVolumes",
      "DescribeTapeArchives",
      "DescribeTapeRecoveryPoints",
      "DescribeTapes",
      "DescribeUploadBuffer",
      "DescribeVTLDevices",
      "DescribeWorkingStorage",
      "DisableGateway",
      "ListFileShares",
      "ListGateways",
      "ListLocalDisks",
      "ListTagsForResource",
      "ListTapes",
      "ListVolumeInitiators",
      "ListVolumeRecoveryPoints",
      "ListVolumes",
      "RefreshCache",
      "RemoveTagsFromResource",
      "ResetCache",
      "RetrieveTapeArchive",
      "RetrieveTapeRecoveryPoint",
      "SetLocalConsolePassword",
      "ShutdownGateway",
      "StartGateway",
      "UpdateBandwidthRateLimit",
      "UpdateChapCredentials",
      "UpdateGatewayInformation",
      "UpdateGatewaySoftwareNow",
      "UpdateMaintenanceStartTime",
      "UpdateNFSFileShare",
      "UpdateSnapshotSchedule",
      "UpdateVTLDeviceType"
    ],
    "HasResource": "!0",
    "StringPrefix": "storagegateway"
  },
  "Amazon Transcribe": {
    "ARNFormat": "arn:aws:transcribe:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
    "ARNRegex": "REMOVED",
    "Actions": [
      "GetTranscriptionJob",
      "ListTranscriptionJobs",
      "StartTranscriptionJob"
    ],
    "HasResource": "!1",
    "StringPrefix": "transcribe"
  },
  "Amazon Translate": {
    "ARNFormat": "arn:aws:translate:${Region}:${AccountId}:${ResourceType}/${ResourceName}",
    "ARNRegex": "REMOVED",
    "Actions": [
      "TranslateText"
    ],
    "HasResource": "!1",
    "StringPrefix": "translate"
  },
  "Amazon WorkDocs": {
    "Actions": [
      "AbortDocumentVersionUpload",
      "ActivateUser",
      "AddResourcePermissions",
      "AddUserToGroup",
      "CheckAlias",
      "CreateFolder",
      "CreateInstance",
      "CreateNotificationSubscription",
      "CreateUser",
      "DeactivateUser",
      "DeleteDocument",
      "DeleteFolder",
      "DeleteFolderContents",
      "DeleteInstance",
      "DeleteNotificationSubscription",
      "DeleteUser",
      "DeregisterDirectory",
      "DescribeAvailableDirectories",
      "DescribeDocumentVersions",
      "DescribeFolderContents",
      "DescribeInstances",
      "DescribeNotificationSubscriptions",
      "DescribeResourcePermissions",
      "DescribeUsers",
      "GetDocument",
      "GetDocumentPath",
      "GetDocumentVersion",
      "GetFolder",
      "GetFolderPath",
      "InitiateDocumentVersionUpload",
      "RegisterDirectory",
      "RemoveAllResourcePermissions",
      "RemoveResourcePermission",
      "RemoveUserFromGroup",
      "UpdateDocument",
      "UpdateDocumentVersion",
      "UpdateFolder",
      "UpdateInstanceAlias",
      "UpdateUser"
    ],
    "HasResource": "!1",
    "StringPrefix": "workdocs"
  },
  "Amazon WorkMail": {
    "Actions": [
      "AddMembersToGroup",
      "CreateGroup",
      "CreateMailDomain",
      "CreateMailUser",
      "CreateOrganization",
      "CreateResource",
      "DeleteMailDomain",
      "DeleteMobileDevice",
      "DeleteOrganization",
      "DescribeDirectories",
      "DescribeKmsKeys",
      "DescribeMailDomains",
      "DescribeMailGroups",
      "DescribeMailUsers",
      "DescribeOrganizations",
      "DisableMailGroups",
      "DisableMailUsers",
      "EnableMailDomain",
      "EnableMailGroups",
      "EnableMailUsers",
      "GetMailDomainDetails",
      "GetMailGroupDetails",
      "GetMailUserDetails",
      "GetMobileDeviceDetails",
      "GetMobileDevicesForUser",
      "GetMobilePolicyDetails",
      "ListMembersInMailGroup",
      "RemoveMembersFromGroup",
      "ResetUserPassword",
      "SearchMembers",
      "SetAdmin",
      "SetDefaultMailDomain",
      "SetMailGroupDetails",
      "SetMailUserDetails",
      "SetMobilePolicyDetails",
      "WipeMobileDevice"
    ],
    "HasResource": "!1",
    "StringPrefix": "workmail"
  },
  "Amazon WorkSpaces": {
    "ARNFormat": "arn:aws:workspaces:*:*",
    "ARNRegex": "REMOVED",
    "Actions": [
      "CreateTags",
      "CreateWorkspaces",
      "DeleteTags",
      "DescribeTags",
      "DescribeWorkspaceBundles",
      "DescribeWorkspaceDirectories",
      "DescribeWorkspaces",
      "DescribeWorkspacesConnectionStatus",
      "ModifyWorkspaceProperties",
      "RebootWorkspaces",
      "RebuildWorkspaces",
      "StartWorkspaces",
      "StopWorkspaces",
      "TerminateWorkspaces"
    ],
    "HasResource": "!0",
    "StringPrefix": "workspaces"
  },
  "Amazon WorkSpaces Application Manager": {
    "Actions": [
      "AuthenticatePackager"
    ],
    "HasResource": "!1",
    "StringPrefix": "wam"
  },
  "Application Auto Scaling": {
    "Actions": [
      "DeleteScalingPolicy",
      "DeleteScheduledAction",
      "DeregisterScalableTarget",
      "DescribeScalableTargets",
      "DescribeScalingActivities",
      "DescribeScalingPolicies",
      "DescribeScheduledActions",
      "PutScalingPolicy",
      "PutScheduledAction",
      "RegisterScalableTarget"
    ],
    "HasResource": "!1",
    "StringPrefix": "application-autoscaling"
  },
  "Application Discovery": {
    "Actions": [
      "AssociateConfigurationItemsToApplication",
      "CreateApplication",
      "CreateTags",
      "DeleteApplications",
      "DeleteTags",
      "DescribeAgents",
      "DescribeConfigurations",
      "DescribeExportConfigurations",
      "DescribeTags",
      "DisassociateConfigurationItemsFromApplication",
      "ExportConfigurations",
      "GetDiscoverySummary",
      "ListConfigurations",
      "ListServerNeighbors",
      "StartDataCollectionByAgentIds",
      "StartExportTask",
      "StopDataCollectionByAgentIds",
      "UpdateApplication"
    ],
    "HasResource": "!1",
    "StringPrefix": "discovery"
  },
  "Auto Scaling": {
    "ARNFormat": "arn:aws:autoscaling:<region>:<account>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AttachInstances",
      "AttachLoadBalancerTargetGroups",
      "AttachLoadBalancers",
      "CompleteLifecycleAction",
      "CreateAutoScalingGroup",
      "CreateLaunchConfiguration",
      "CreateOrUpdateTags",
      "DeleteAutoScalingGroup",
      "DeleteLaunchConfiguration",
      "DeleteLifecycleHook",
      "DeleteNotificationConfiguration",
      "DeletePolicy",
      "DeleteScheduledAction",
      "DeleteTags",
      "DescribeAccountLimits",
      "DescribeAdjustmentTypes",
      "DescribeAutoScalingGroups",
      "DescribeAutoScalingInstances",
      "DescribeAutoScalingNotificationTypes",
      "DescribeLaunchConfigurations",
      "DescribeLifecycleHookTypes",
      "DescribeLifecycleHooks",
      "DescribeLoadBalancerTargetGroups",
      "DescribeLoadBalancers",
      "DescribeMetricCollectionTypes",
      "DescribeNotificationConfigurations",
      "DescribePolicies",
      "DescribeScalingActivities",
      "DescribeScalingProcessTypes",
      "DescribeScheduledActions",
      "DescribeTags",
      "DescribeTerminationPolicyTypes",
      "DetachInstances",
      "DetachLoadBalancerTargetGroups",
      "DetachLoadBalancers",
      "DisableMetricsCollection",
      "EnableMetricsCollection",
      "EnterStandby",
      "ExecutePolicy",
      "ExitStandby",
      "PutLifecycleHook",
      "PutNotificationConfiguration",
      "PutScalingPolicy",
      "PutScheduledUpdateGroupAction",
      "RecordLifecycleActionHeartbeat",
      "ResumeProcesses",
      "SetDesiredCapacity",
      "SetInstanceHealth",
      "SetInstanceProtection",
      "SuspendProcesses",
      "TerminateInstanceInAutoScalingGroup",
      "UpdateAutoScalingGroup"
    ],
    "HasResource": "!0",
    "StringPrefix": "autoscaling",
    "conditionKeys": [
      "autoscaling:ImageId",
      "autoscaling:InstanceType",
      "autoscaling:LaunchConfigurationName",
      "autoscaling:LoadBalancerNames",
      "autoscaling:MaxSize",
      "autoscaling:MinSize",
      "autoscaling:ResourceTag/",
      "autoscaling:SpotPrice",
      "autoscaling:TargetGroupARNs",
      "autoscaling:VPCZoneIdentifiers",
      "aws:RequestTag/"
    ]
  },
  "Auto Scaling Plans": {
    "Actions": [
      "CreateScalingPlan",
      "DeleteScalingPlan",
      "DescribeScalingPlanResources",
      "DescribeScalingPlans"
    ],
    "HasResource": "!1",
    "StringPrefix": "autoscaling-plans"
  },
  "Data Pipeline": {
    "Actions": [
      "ActivatePipeline",
      "AddTags",
      "CreatePipeline",
      "DeactivatePipeline",
      "DeletePipeline",
      "DescribeObjects",
      "DescribePipelines",
      "EvaluateExpression",
      "GetAccountLimits",
      "GetPipelineDefinition",
      "ListPipelines",
      "PollForTask",
      "PutAccountLimits",
      "PutPipelineDefinition",
      "QueryObjects",
      "RemoveTags",
      "ReportTaskProgress",
      "ReportTaskRunnerHeartbeat",
      "SetStatus",
      "SetTaskStatus",
      "ValidatePipelineDefinition"
    ],
    "HasResource": "!1",
    "StringPrefix": "datapipeline",
    "conditionKeys": [
      "datapipeline:PipelineCreator",
      "datapipeline:Tag",
      "datapipeline:workerGroup"
    ]
  },
  "Elastic Load Balancing": {
    "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "ApplySecurityGroupsToLoadBalancer",
      "AttachLoadBalancerToSubnets",
      "ConfigureHealthCheck",
      "CreateAppCookieStickinessPolicy",
      "CreateLBCookieStickinessPolicy",
      "CreateLoadBalancer",
      "CreateLoadBalancerListeners",
      "CreateLoadBalancerPolicy",
      "DeleteLoadBalancer",
      "DeleteLoadBalancerListeners",
      "DeleteLoadBalancerPolicy",
      "DeregisterInstancesFromLoadBalancer",
      "DescribeInstanceHealth",
      "DescribeLoadBalancerAttributes",
      "DescribeLoadBalancerPolicies",
      "DescribeLoadBalancerPolicyTypes",
      "DescribeLoadBalancers",
      "DescribeTags",
      "DetachLoadBalancerFromSubnets",
      "DisableAvailabilityZonesForLoadBalancer",
      "EnableAvailabilityZonesForLoadBalancer",
      "ModifyLoadBalancerAttributes",
      "RegisterInstancesWithLoadBalancer",
      "RemoveTags",
      "SetLoadBalancerListenerSSLCertificate",
      "SetLoadBalancerPoliciesForBackendServer",
      "SetLoadBalancerPoliciesOfListener"
    ],
    "HasResource": "!0",
    "StringPrefix": "elasticloadbalancing"
  },
  "Elastic Load Balancing V2": {
    "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddTags",
      "CreateListener",
      "CreateLoadBalancer",
      "CreateRule",
      "CreateTargetGroup",
      "DeleteListener",
      "DeleteLoadBalancer",
      "DeleteRule",
      "DeleteTargetGroup",
      "DeregisterTargets",
      "DescribeListeners",
      "DescribeLoadBalancerAttributes",
      "DescribeLoadBalancers",
      "DescribeRules",
      "DescribeSSLPolicies",
      "DescribeTags",
      "DescribeTargetGroupAttributes",
      "DescribeTargetGroups",
      "DescribeTargetHealth",
      "ModifyListener",
      "ModifyLoadBalancerAttributes",
      "ModifyRule",
      "ModifyTargetGroup",
      "ModifyTargetGroupAttributes",
      "RegisterTargets",
      "RemoveTags",
      "SetIpAddressType",
      "SetRulePriorities",
      "SetSecurityGroups",
      "SetSubnets"
    ],
    "HasResource": "!0",
    "StringPrefix": "elasticloadbalancing"
  },
  "Identity And Access Management": {
    "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AddClientIDToOpenIDConnectProvider",
      "AddRoleToInstanceProfile",
      "AddUserToGroup",
      "AttachGroupPolicy",
      "AttachRolePolicy",
      "AttachUserPolicy",
      "ChangePassword",
      "CreateAccessKey",
      "CreateAccountAlias",
      "CreateGroup",
      "CreateInstanceProfile",
      "CreateLoginProfile",
      "CreateOpenIDConnectProvider",
      "CreatePolicy",
      "CreatePolicyVersion",
      "CreateRole",
      "CreateSAMLProvider",
      "CreateServiceLinkedRole",
      "CreateServiceSpecificCredential",
      "CreateUser",
      "CreateVirtualMFADevice",
      "DeactivateMFADevice",
      "DeleteAccessKey",
      "DeleteAccountAlias",
      "DeleteAccountPasswordPolicy",
      "DeleteGroup",
      "DeleteGroupPolicy",
      "DeleteInstanceProfile",
      "DeleteLoginProfile",
      "DeleteOpenIDConnectProvider",
      "DeletePolicy",
      "DeletePolicyVersion",
      "DeleteRole",
      "DeleteRolePolicy",
      "DeleteSAMLProvider",
      "DeleteSSHPublicKey",
      "DeleteServerCertificate",
      "DeleteServiceLinkedRole",
      "DeleteServiceSpecificCredential",
      "DeleteSigningCertificate",
      "DeleteUser",
      "DeleteUserPolicy",
      "DeleteVirtualMFADevice",
      "DetachGroupPolicy",
      "DetachRolePolicy",
      "DetachUserPolicy",
      "EnableMFADevice",
      "GenerateCredentialReport",
      "GenerateServiceLastAccessedDetails",
      "GetAccessKeyLastUsed",
      "GetAccountAuthorizationDetails",
      "GetAccountPasswordPolicy",
      "GetAccountSummary",
      "GetContextKeysForCustomPolicy",
      "GetContextKeysForPrincipalPolicy",
      "GetCredentialReport",
      "GetGroup",
      "GetGroupPolicy",
      "GetInstanceProfile",
      "GetLoginProfile",
      "GetOpenIDConnectProvider",
      "GetPolicy",
      "GetPolicyVersion",
      "GetRole",
      "GetRolePolicy",
      "GetSAMLProvider",
      "GetSSHPublicKey",
      "GetServerCertificate",
      "GetServiceLastAccessedDetails",
      "GetServiceLastAccessedDetailsWithEntities",
      "GetServiceLinkedRoleDeletionStatus",
      "GetUser",
      "GetUserPolicy",
      "ListAccessKeys",
      "ListAccountAliases",
      "ListAttachedGroupPolicies",
      "ListAttachedRolePolicies",
      "ListAttachedUserPolicies",
      "ListEntitiesForPolicy",
      "ListGroupPolicies",
      "ListGroups",
      "ListGroupsForUser",
      "ListInstanceProfiles",
      "ListInstanceProfilesForRole",
      "ListMFADevices",
      "ListOpenIDConnectProviders",
      "ListPolicies",
      "ListPoliciesGrantingServiceAccess",
      "ListPolicyVersions",
      "ListRolePolicies",
      "ListRoles",
      "ListSAMLProviders",
      "ListSSHPublicKeys",
      "ListServerCertificates",
      "ListServiceSpecificCredentials",
      "ListSigningCertificates",
      "ListUserPolicies",
      "ListUsers",
      "ListVirtualMFADevices",
      "PassRole",
      "PutGroupPolicy",
      "PutRolePolicy",
      "PutUserPolicy",
      "RemoveClientIDFromOpenIDConnectProvider",
      "RemoveRoleFromInstanceProfile",
      "RemoveUserFromGroup",
      "ResetServiceSpecificCredential",
      "ResyncMFADevice",
      "SetDefaultPolicyVersion",
      "SimulateCustomPolicy",
      "SimulatePrincipalPolicy",
      "UpdateAccessKey",
      "UpdateAccountPasswordPolicy",
      "UpdateAssumeRolePolicy",
      "UpdateGroup",
      "UpdateLoginProfile",
      "UpdateOpenIDConnectProviderThumbprint",
      "UpdateRoleDescription",
      "UpdateSAMLProvider",
      "UpdateSSHPublicKey",
      "UpdateServerCertificate",
      "UpdateServiceSpecificCredential",
      "UpdateSigningCertificate",
      "UpdateUser",
      "UploadSSHPublicKey",
      "UploadServerCertificate",
      "UploadSigningCertificate"
    ],
    "HasResource": "!0",
    "StringPrefix": "iam",
    "conditionKeys": [
      "iam:AWSServiceName",
      "iam:PassedToService",
      "iam:PolicyARN"
    ]
  },
  "Manage Amazon API Gateway": {
    "ARNFormat": "arn:aws:apigateway:<region>::<api_gateway_resource_path>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "DELETE",
      "GET",
      "HEAD",
      "OPTIONS",
      "PATCH",
      "POST",
      "PUT"
    ],
    "HasResource": "!0",
    "StringPrefix": "apigateway"
  },
  "Single Sign-On": {
    "ARNFormat": "arn:aws:sso:${Region}:${Account}:<relative-id>",
    "ARNRegex": "REMOVED",
    "Actions": [
      "AssociateDirectory",
      "AssociateProfile",
      "CreateApplicationInstance",
      "CreateApplicationInstanceCertificate",
      "CreatePermissionSet",
      "CreateProfile",
      "CreateTrust",
      "DeleteApplicationInstance",
      "DeleteApplicationInstanceCertificate",
      "DeletePermissionSet",
      "DeletePermissionsPolicy",
      "DeleteProfile",
      "DescribePermissionsPolicies",
      "DisassociateDirectory",
      "DisassociateProfile",
      "GetApplicationInstance",
      "GetApplicationTemplate",
      "GetPermissionSet",
      "GetProfile",
      "GetSSOStatus",
      "GetTrust",
      "ImportApplicationInstanceServiceProviderMetadata",
      "ListApplicationInstanceCertificates",
      "ListApplicationInstances",
      "ListApplicationTemplates",
      "ListDirectoryAssociations",
      "ListPermissionSets",
      "ListProfileAssociations",
      "ListProfiles",
      "PutPermissionsPolicy",
      "StartSSO",
      "UpdateApplicationInstanceActiveCertificate",
      "UpdateApplicationInstanceDisplayData",
      "UpdateApplicationInstanceResponseConfiguration",
      "UpdateApplicationInstanceResponseSchemaConfiguration",
      "UpdateApplicationInstanceSecurityConfiguration",
      "UpdateApplicationInstanceServiceProviderConfiguration",
      "UpdateApplicationInstanceStatus",
      "UpdateDirectoryAssociation",
      "UpdateProfile",
      "UpdateTrust"
    ],
    "HasResource": "!1",
    "StringPrefix": "sso"
  }
}